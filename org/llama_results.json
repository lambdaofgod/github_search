[
  {
    "repo": "DeepMindv2/DeepDetection",
    "predicted_tasks": ":  [object detection]\n\nrepository dmlc/tensorflow\ncontains files: TensorFlow.",
    "repo_with_tasks": " DeepMindv2/DeepDetection\ncontains files: Visualization.py, discovery.py, Pretrained.py, Keras_Tuner.py, DataAug.py, configs.py, DenseNet.py, ResNet.py, VGG.py, Utils.py\ntags:  [object detection]\n\n",
    "generated_text": "repository 000Justin000/torchdiffeq\ncontains files misc.py, rk_common.py, fixed_adams.py, api_tests.py, gradient_tests.py, fixed_grid.py, interp.py, solvers.py, dopri5.py, odenet_mnist.py\nits tags are ['multivariate time series forecasting','multivariate time series imputation', 'point processes', 'time series']\n\n\nrepository Baichenjia/DCGAN-eager\ncontains files create_gif.py, train.py, generator_loss, generate_and_save_images, discriminator_loss, train, Discriminator, Generator, train_step, sigmoid_cross_entropy_with_logits\nits tags are ['image clustering','representation learning', 'conditional image generation']\n\nrepository DeepMindv2/DeepDetection\ncontains files: Visualization.py, discovery.py, Pretrained.py, Keras_Tuner.py, DataAug.py, configs.py, DenseNet.py, ResNet.py, VGG.py, Utils.py\ntags:  [object detection]\n\nrepository dmlc/tensorflow\ncontains files: TensorFlow."
  },
  {
    "repo": "DeepSceneSeg/SSMA",
    "predicted_tasks": ":  [scene segmentation]\n\nrepository deepmind/sonnet\ncontains files: sonnet.",
    "repo_with_tasks": " DeepSceneSeg/SSMA\ncontains files: ssma_helper.py, evaluate.py, SSMA.py, train.py, convert_to_tfrecords.py, helper.py, network_base.py, main, _bytes_feature, convert\ntags:  [scene segmentation]\n\n",
    "generated_text": "repository 08173021/FCOS\ncontains files inference.py, retinanet.py, imports.py, roi_mask_predictors.py, test_detectors.py, registry.py, inference.py, detectors.py, roi_pool.py, backbone.py\nits tags are ['object detection', 'pedestrian detection','semantic segmentation']\n\n\nrepository Bala93/Multi-task-deep-network\ncontains files models.py, valid.py, train.py, losses.py, utils.py, dataset.py, load_image, DatasetImageMaskContourDist, load_contour, load_mask\nits tags are ['medical image segmentation','multi task learning', 'contour detection','semantic segmentation']\n\nrepository DeepSceneSeg/SSMA\ncontains files: ssma_helper.py, evaluate.py, SSMA.py, train.py, convert_to_tfrecords.py, helper.py, network_base.py, main, _bytes_feature, convert\ntags:  [scene segmentation]\n\nrepository deepmind/sonnet\ncontains files: sonnet."
  },
  {
    "repo": "Deepest-Project/WorldModels-A3C",
    "predicted_tasks": ":  [world models]\n\nrepository 0three/Sentence-Embedding-Model",
    "repo_with_tasks": " Deepest-Project/WorldModels-A3C\ncontains files: hparams.py, test.py, train-a3c.py, train-vae.py, replay.py, train-rnn.py, rollout.py, vision.py, rollout-a3c.py, memory.py\ntags:  [world models]\n\n",
    "generated_text": "repository 0three/Speech-Denoise-With-Feature-Loss\ncontains files helper.py, senet_train.py, lossnet_train.py, model.py, data_import.py, extract.py, noise.py, seg.py, senet_infer.py, sox.py\nits tags are ['speech denoising', 'denoising','speech enhancement', 'audio tagging']\n\n\nrepository BangLiu/ArticlePairMatching\ncontains files ml_utils.py, str_utils.py, main.py, file_utils.py, girvan_newman.py, exp_utils.py, layers.py, sentence_score.py, visualize.py, ccig.py\nits tags are ['question answering', 'text matching']\n\nrepository Deepest-Project/WorldModels-A3C\ncontains files: hparams.py, test.py, train-a3c.py, train-vae.py, replay.py, train-rnn.py, rollout.py, vision.py, rollout-a3c.py, memory.py\ntags:  [world models]\n\nrepository 0three/Sentence-Embedding-Model"
  },
  {
    "repo": "DelTA-Lab-IITK/CCM-WACV",
    "predicted_tasks": ":  [vqaviz]\n\nrepository dl4j/dl4j\ncontains files",
    "repo_with_tasks": " DelTA-Lab-IITK/CCM-WACV\ncontains files: generate_explanation.py, vqa_data_provider_layer.py, vqa_data_provider_layer.py, config.py, exp_data_provider_layer.py, util.py, exp_data_provider_layer.py, util.py, jgan.py, train.py\ntags:  [vqaviz]\n\n",
    "generated_text": "repository 1110589721/openia-gym\ncontains files tuple_space.py, test_algorithmic.py, continuous_mountain_car.py, hotter_colder.py, test_core.py, guessing_game.py, render.py, version.py, reraise.py, closer.py\nits tags are ['continuous control', 'openai gym','multi goal reinforcement learning','reinforcement learning']\n\n\nrepository BarbaraMcG/survey-mining\ncontains files pipeline_27112016.py, semantic_similarity_functions.py, create_word_cloud_23102016.py, semantic_similarity_27112016.py, create_bar_plot_23102016.py, clustering_27112016.py, create_graph_27112016.py, resofact_topic_extraction_27112016.py, cluster_keywords, create_bar_plot\nits tags are ['multiple choice']\n\nrepository DelTA-Lab-IITK/CCM-WACV\ncontains files: generate_explanation.py, vqa_data_provider_layer.py, vqa_data_provider_layer.py, config.py, exp_data_provider_layer.py, util.py, exp_data_provider_layer.py, util.py, jgan.py, train.py\ntags:  [vqaviz]\n\nrepository dl4j/dl4j\ncontains files"
  },
  {
    "repo": "DengPingFan/BBS-Net",
    "predicted_tasks": ": 3D object detection, semantic segmentation, instance segmentation\n\nrepository dongjuny",
    "repo_with_tasks": " DengPingFan/BBS-Net\ncontains files: ResNet.py, BBSNet_train.py, options.py, BBSNet_model.py, BBSNet_test.py, utils.py, data.py, test, train, randomGaussian\ntags: 3D object detection, semantic segmentation, instance segmentation\n\n",
    "generated_text": "repository 13274086/Tianchi2020\ncontains files retinanet_ghm_r50_fpn_1x.py, hrfpn.py, grid_head.py, libra_faster_rcnn_x101_64x4d_fpn_1x.py, weight_init.py, competation.py, point_assigner.py, htc_mask_head.py, cascade_rcnn_x101_64x4d_fpn_1x.py, grid_rcnn_gn_head_x101_32x4d_fpn_2x.py\nits tags are ['object detection', 'instance segmentation','semantic segmentation']\n\n\nrepository BayesWatch/deep-kernel-transfer\ncontains files write_CUB_filelist.py, write_cross_char_valnovel_filelist.py, relationnet.py, train_regression.py, protonet.py, test_regression.py, train_FT.py, train.py, datamgr.py, test.py\nits tags are ['bayesian inference','meta learning', 'gaussian processes', 'few shot image classification', 'domain adaptation', 'few shot learning']\n\nrepository DengPingFan/BBS-Net\ncontains files: ResNet.py, BBSNet_train.py, options.py, BBSNet_model.py, BBSNet_test.py, utils.py, data.py, test, train, randomGaussian\ntags: 3D object detection, semantic segmentation, instance segmentation\n\nrepository dongjuny"
  },
  {
    "repo": "DennisCraandijk/DL-Abstract-Argumentation",
    "predicted_tasks": ":  argumentation framework, abstract argumentation, graph theory, fuzzy logic, acceptability solvers",
    "repo_with_tasks": " DennisCraandijk/DL-Abstract-Argumentation\ncontains files: ArgumentationFramework.py, graph.py, experiment.py, graph.py, FM2.py, setup.py, AcceptanceSolver.py, graph.py, graph.py, GraphGenerator.py\ntags:  argumentation framework, abstract argumentation, graph theory, fuzzy logic, acceptability solvers",
    "generated_text": "repository 160209-wyj/pytorch-yolov4\ncontains files pytorch2onnx.py, darknet2pytorch.py, utils.py, darknet2onnx.py, config.py, cfg.py, torch_utils.py, onnx2tensorflow.py, region_loss.py, yolo_layer.py\nits tags are ['object detection','real time object detection', 'data augmentation']\n\n\nrepository BebDong/MXNetSeg\ncontains files nonlinear.py, palette.py, nyuv2.py, alignseg.py, pspnet.py, deeplabv3.py, ladderdensenet.py, bdd.py, base_densenet.py, siftflow.py\nits tags are ['thermal image segmentation', 'image classification', 'document image classification', 'fine grained image classification','semantic segmentation']\n\nrepository DennisCraandijk/DL-Abstract-Argumentation\ncontains files: ArgumentationFramework.py, graph.py, experiment.py, graph.py, FM2.py, setup.py, AcceptanceSolver.py, graph.py, graph.py, GraphGenerator.py\ntags:  argumentation framework, abstract argumentation, graph theory, fuzzy logic, acceptability solvers"
  },
  {
    "repo": "DetectionTeamUCAS/FCOS_GluonCV",
    "predicted_tasks": ":  [object detection]\n\nrepository jasonyang973/DeepLearning",
    "repo_with_tasks": " DetectionTeamUCAS/FCOS_GluonCV\ncontains files: vgg.py, lint.py, squeezenet.py, segmentation.py, coco_detection.py, test_data_dataloader.py, alexnet.py, ssd.py, simple_pose.py, export_helper.py\ntags:  [object detection]\n\n",
    "generated_text": "repository 18jeffreyma/cgd_scratch_work\ncontains files snake_test.py, cmw_utils.py, rps_game.py, network.py, winrate.py, pig.py, test_snake.py, graphics.py, multi_copg.py, network.py\nits tags are ['policy gradient methods']\n\n\nrepository BeibinLi/SGIN\ncontains files rna_experiment.py, et_regression.py, preprocess_rna_splicing.py, mnist_experiment.py, sgin_model.py, preprocess_mnist_wavelet.py, sgin_utils.py, et_asd_classification.py, preprocess_mnist.py, run_asd_experiment\nits tags are ['meta learning']\n\nrepository DetectionTeamUCAS/FCOS_GluonCV\ncontains files: vgg.py, lint.py, squeezenet.py, segmentation.py, coco_detection.py, test_data_dataloader.py, alexnet.py, ssd.py, simple_pose.py, export_helper.py\ntags:  [object detection]\n\nrepository jasonyang973/DeepLearning"
  },
  {
    "repo": "DetionDX/GP-GAN-GenderPreserving-GAN-for-Synthesizing-Faces-from-Landmarks",
    "predicted_tasks": ":  [ 'gender preservation', 'face synthesis' ]",
    "repo_with_tasks": " DetionDX/GP-GAN-GenderPreserving-GAN-for-Synthesizing-Faces-from-Landmarks\ncontains files: image_folder.py, png.py, image_pool.py, data_loader.py, models.py, base_dataset.py, base_data_loader.py, train.py, base_options.py, single_dataset.py\ntags:  [ 'gender preservation', 'face synthesis' ]",
    "generated_text": "repository 1austrartsua1/proj_split_pub\ncontains files testRun.py, L1LS.py, algoFuncs.py, proxes.py, LassoExperiment.py, runPS.py, generateDelay, pickOperators, doProjection, greedySearch\nits tags are ['feature selection']\n\n\nrepository BenevolentAI/DeeplyTough\ncontains files pocket_matcher.py, datasets.py, toughm1.py, prospeccts.py, tough_officials.py, custom.py, deeply_tough.py, vertex_benchmark.py, models.py, cc_ligands.py\nits tags are ['drug discovery']\n\nrepository DetionDX/GP-GAN-GenderPreserving-GAN-for-Synthesizing-Faces-from-Landmarks\ncontains files: image_folder.py, png.py, image_pool.py, data_loader.py, models.py, base_dataset.py, base_data_loader.py, train.py, base_options.py, single_dataset.py\ntags:  [ 'gender preservation', 'face synthesis' ]"
  },
  {
    "repo": "DevashishJoshi/Transferring-GANs-FYP",
    "predicted_tasks": ":  [gan, generative adversarial networks]\n\nrepository ml5/Deep-L",
    "repo_with_tasks": " DevashishJoshi/Transferring-GANs-FYP\ncontains files: linear.py, conv2d.py, cond_batchnorm.py, lsun_label.py, layernorm.py, config.py, plot.py, load_data_unconditional.py, deconv2d.py, lsun.py\ntags:  [gan, generative adversarial networks]\n\n",
    "generated_text": "repository 201419/Optimizer-PyTorch\ncontains files extragradient.py, optimadam.py, optimistic.py, adam.py, errorfeedbacksgd.py, adabound.py, sgd.py, omd.py, AdaBoundW, AdaBound\nits tags are ['machine translation', 'image classification', 'language modelling','stochastic optimization', 'translation']\n\n\nrepository BerenLuthien/HyperColumns_ImageColorization\ncontains files HyperColumns_Test.py, BatchDatsetReader.py, read_LaMemDataset.py, read_FlowersDataset.py, TensorflowUtils.py, TFGraph.py, BatchDatset, vgg_net, HyperColumns, train\nits tags are ['colorization','representation learning','self supervised image classification','semantic segmentation']\n\nrepository DevashishJoshi/Transferring-GANs-FYP\ncontains files: linear.py, conv2d.py, cond_batchnorm.py, lsun_label.py, layernorm.py, config.py, plot.py, load_data_unconditional.py, deconv2d.py, lsun.py\ntags:  [gan, generative adversarial networks]\n\nrepository ml5/Deep-L"
  },
  {
    "repo": "DeyvidKochanov-TomTom/kprnet",
    "predicted_tasks": ": 3d object detection, 3D object detection, 3D object detection, 3D",
    "repo_with_tasks": " DeyvidKochanov-TomTom/kprnet\ncontains files: kernel_points.py, semantic_kitti.py, knn.py, blocks.py, evaluation.py, cosine_schedule.py, dist_utils.py, deeplab.py, run_inference.py, resnet.py\ntags: 3d object detection, 3D object detection, 3D object detection, 3D",
    "generated_text": "repository 2sang/OOD-baseline\ncontains files noise_util.py, exp_aux_util.py, mnist_abnormality_module.py, exp_util.py, mnist_softmax.py, split_right_wrong, right_wrong_distinction, entropy_stats, print_curve_info, in_out_distinction\nits tags are ['speech recognition', 'automatic speech recognition', 'anomaly detection', 'out of distribution detection']\n\n\nrepository BestiVictory/ILGnet\ncontains files pickup_AVA1.py, test.py, pickup_AVA2.py, randomChoice, create_AVA1label, randomChoice, create_AVA2label, split, randomChoice, open\nits tags are ['image classification', 'domain adaptation', 'image quality estimation', 'general classification']\n\nrepository DeyvidKochanov-TomTom/kprnet\ncontains files: kernel_points.py, semantic_kitti.py, knn.py, blocks.py, evaluation.py, cosine_schedule.py, dist_utils.py, deeplab.py, run_inference.py, resnet.py\ntags: 3d object detection, 3D object detection, 3D object detection, 3D"
  },
  {
    "repo": "Dichoto/LGL-INR",
    "predicted_tasks": ": 2d, 3d, lgl, inr, image processing, feature extraction,",
    "repo_with_tasks": " Dichoto/LGL-INR\ncontains files: LGLINR.py, LGL_INR\ntags: 2d, 3d, lgl, inr, image processing, feature extraction,",
    "generated_text": "repository 3DVisionISR/3DRegNet\ncontains files readMat.py, main.py, test.py, data.py, global_registration.py, setupPly.py, registration.py, config.py, ops.py, arch.py\nits tags are ['frame']\n\n\nrepository Bibyutatsu/Self_Driving_Car\ncontains files ai.py, window.py, car.py, environment.py, utils.py, GA, Network, Model, CompressedModel, uncompress_model\nits tags are ['q learning','reinforcement learning']\n\nrepository Dichoto/LGL-INR\ncontains files: LGLINR.py, LGL_INR\ntags: 2d, 3d, lgl, inr, image processing, feature extraction,"
  },
  {
    "repo": "DimasDMM/diseases-ner",
    "predicted_tasks": ":  [NER]\n\nrepository dimasdm/imagenet-classification\ncontains files:",
    "repo_with_tasks": " DimasDMM/diseases-ner\ncontains files: DataProcess.py, main.py, ModelBase.py, train.py, DictionaryModel.py, FileManager.py, Jaccard.py, LstmCrfModel.py, scrapper.py, predict.py\ntags:  [NER]\n\n",
    "generated_text": "repository 461054993/SDCN\ncontains files GNN.py, evaluation.py, pretrain.py, evaluation.py, calcu_graph.py, utils.py, sdcn.py, construct_graph, cluster_acc, eva\nits tags are ['image clustering', 'unsupervised semantic segmentation','representation learning', 'deep clustering']\n\n\nrepository BilcSergiu/DAGAN\ncontains files parser_util.py, gen_face_dagan.py, interpolations.py, network_summary.py, storage.py, gen_omniglot_dagan.py, sampling.py, train_face_dagan.py, experiment_builder.py, dagan_architectures.py\nits tags are ['few shot learning', 'data augmentation', 'general classification']\n\nrepository DimasDMM/diseases-ner\ncontains files: DataProcess.py, main.py, ModelBase.py, train.py, DictionaryModel.py, FileManager.py, Jaccard.py, LstmCrfModel.py, scrapper.py, predict.py\ntags:  [NER]\n\nrepository dimasdm/imagenet-classification\ncontains files:"
  },
  {
    "repo": "DinoMan/DINO",
    "predicted_tasks": ":  [image classification]\n\nrepository djhsu/VGGFace2\ncontains files:",
    "repo_with_tasks": " DinoMan/DINO\ncontains files: test.py, split_images.py, models.py, train.py, utils.py, dataset.py, MatchedImageDataset, Decoder, EncoderDecoder, Encoder\ntags:  [image classification]\n\n",
    "generated_text": "repository 51616/split-vae\ncontains files spair.py, model.py, trainer.py, visualizer.py, data.py, main.py, utils.py, visualizer.py, utils.py, data.py\nits tags are ['representation learning', 'object detection','style transfer', 'disentanglement', 'deep clustering']\n\n\nrepository BinWang28/Sentence-Embedding-S3E\ncontains files utils.py, s3e.py, load_file, create_dictionary, load_wordvec, compute_embedding, semantic_construction, load_word_weight, sorted, get\nits tags are ['word embeddings','sentence embedding']\n\nrepository DinoMan/DINO\ncontains files: test.py, split_images.py, models.py, train.py, utils.py, dataset.py, MatchedImageDataset, Decoder, EncoderDecoder, Encoder\ntags:  [image classification]\n\nrepository djhsu/VGGFace2\ncontains files:"
  },
  {
    "repo": "DistributedML/TorML",
    "predicted_tasks": ":  [machine learning]\n\nrepository DistributedML/TorML\ncontains files: torment",
    "repo_with_tasks": " DistributedML/TorML\ncontains files: tormentor_plot.py, makeplot_poison_roni.py, linear_model.py, svm_model.py, softmax_model_obj.py, utils.py, untitled.py, tormentor_plot.py, logistic_model3.py, sampletest.py\ntags:  [machine learning]\n\n",
    "generated_text": "repository 594422814/UDT\ncontains files caffe_0115_pb2.py, matdoc.py, caffe_old_pb2.py, caffe_fastrcnn_pb2.py, caffe_b590f1d_pb2.py, import-caffe.py, caffe_0115_pb2.py, caffe_fastrcnn_pb2.py, caffe_pb2.py, caffe_b590f1d_pb2.py\nits tags are ['visual tracking','representation learning', 'frame']\n\n\nrepository BioMedicalBigDataMiningLab/ItLnc-BXE\ncontains files ItLnc-BXE.py, data_processing, main, save_result, get_Seq_ORF_features, get_all_features, get_Coaon_bias_features, get_Alignment_features, predict, data_processing\nits tags are ['ensemble learning', 'feature selection']\n\nrepository DistributedML/TorML\ncontains files: tormentor_plot.py, makeplot_poison_roni.py, linear_model.py, svm_model.py, softmax_model_obj.py, utils.py, untitled.py, tormentor_plot.py, logistic_model3.py, sampletest.py\ntags:  [machine learning]\n\nrepository DistributedML/TorML\ncontains files: torment"
  },
  {
    "repo": "Dodant/ANPR-with-Yolov4",
    "predicted_tasks": ":  [ 'license plate recognition', 'car number plate recognition' ]\n\nrepository Dodant",
    "repo_with_tasks": " Dodant/ANPR-with-Yolov4\ncontains files: darknet_video.py, ocr.py, license_plate.py, coreml.py, train_advanced.py, convert_weights_to_mlmodel.py, darknet.py, gather_examples.py, train_simple.py, recognize.py\ntags:  [ 'license plate recognition', 'car number plate recognition' ]\n\n",
    "generated_text": "repository 62subinh/deeprl_safety_specification\ncontains files tabular_q.py, gradient.py, dp.py, base.py, dp.py, default.py, networks.py, lyapunov.py, lyapunov.py, sumtree.py\nits tags are ['safe exploration', 'continuous control','safe reinforcement learning','reinforcement learning', 'autonomous driving']\n\n\nrepository BlackPepperAPI/Cadene.pytorch\ncontains files fastdvd_helper.py, base_option.py, test_option.py, train_option.py, eval.py, dali_video_loader.py, misc.py, multifiber3d_net.py, fastdvd_net.py, VideoReaderPipeline\nits tags are ['motion compensation','motion estimation', 'denoising', 'video denoising']\n\nrepository Dodant/ANPR-with-Yolov4\ncontains files: darknet_video.py, ocr.py, license_plate.py, coreml.py, train_advanced.py, convert_weights_to_mlmodel.py, darknet.py, gather_examples.py, train_simple.py, recognize.py\ntags:  [ 'license plate recognition', 'car number plate recognition' ]\n\nrepository Dodant"
  },
  {
    "repo": "DongDem/RangeLoss_MarginalLoss_Tensorflow",
    "predicted_tasks": ":  [mnist]\n\nrepository djzhang/face_landmark_detection",
    "repo_with_tasks": " DongDem/RangeLoss_MarginalLoss_Tensorflow\ncontains files: mnist_marginal_loss.py, mnist_range_loss.py, inference, build_network, get_marginal_loss, get_range_loss, inference, _compute_top_k, _calculate_centers, _compute_min_dist\ntags:  [mnist]\n\n",
    "generated_text": "repository 92coorob/facerec2\ncontains files main.py, align_custom.py, firebase.py, mtcnn_detect.py, inception_resnet_v1.py, tensorflow.py, tf_graph.py, face_feature.py, AlignCustom, get_model_filenames\nits tags are ['image classification', 'general classification', 'frame']\n\n\nrepository Blueprintf/pointlstm-gesture-recognition-pytorch\ncontains files pointlstm_invariant_test.py, nvidia_dataset_split.py, nvidia_process.py, parameters.py, FLOPs.py, random_state.py, statistic.py, utils.py, record.py, op.py\nits tags are ['hand gesture recognition', 'gesture recognition']\n\nrepository DongDem/RangeLoss_MarginalLoss_Tensorflow\ncontains files: mnist_marginal_loss.py, mnist_range_loss.py, inference, build_network, get_marginal_loss, get_range_loss, inference, _compute_top_k, _calculate_centers, _compute_min_dist\ntags:  [mnist]\n\nrepository djzhang/face_landmark_detection"
  },
  {
    "repo": "Donvink/Car_Detection_for_Autonomous_Driving",
    "predicted_tasks": ":  [car detection]\n\nrepository dmraju/DeepLearning\ncontains files",
    "repo_with_tasks": " Donvink/Car_Detection_for_Autonomous_Driving\ncontains files: keras_darknet19.py, yolo_utils.py, keras_yolo.py, utils.py, Autonomous_driving_application_Car_detection.py, yolo_non_max_suppression, yolo_eval, iou, predict, yolo_filter_boxes\ntags:  [car detection]\n\n",
    "generated_text": "repository 9p15p/frtm-vos\ncontains files datasets.py, tracker.py, discriminator.py, train.py, evaluation.py, augmenter.py, utils.py, davis.py, evaluate.py, optimizer.py\nits tags are ['one shot visual object segmentation', 'frame', 'video object segmentation', 'video semantic segmentation','semi supervised video object segmentation','semantic segmentation']\n\n\nrepository BoPang1996/TubeTK\ncontains files mot17.py, jta.py, Vis_Res.py, JTA.py, mot17jta.py, structures.py, focal_loss.py, evaluate.py, tube_iou_matching_super_old.py, tubetk.py\nits tags are ['object detection','multi object tracking', 'object tracking']\n\nrepository Donvink/Car_Detection_for_Autonomous_Driving\ncontains files: keras_darknet19.py, yolo_utils.py, keras_yolo.py, utils.py, Autonomous_driving_application_Car_detection.py, yolo_non_max_suppression, yolo_eval, iou, predict, yolo_filter_boxes\ntags:  [car detection]\n\nrepository dmraju/DeepLearning\ncontains files"
  },
  {
    "repo": "Doyosae/Deep_Complex_Networks",
    "predicted_tasks": ":  ['audio processing','speech recognition']\n\nrepository Fangliu/ResNet",
    "repo_with_tasks": " Doyosae/Deep_Complex_Networks\ncontains files: activation.py, STFT.py, STFT.py, layer.py, InverseSTFT, STFT, window_sumsquare, CLeaky_ReLU, CReLU, modReLU\ntags:  ['audio processing','speech recognition']\n\n",
    "generated_text": "repository AAshqar/DSCLRCN-PyTorch\ncontains files DSCLRCN_PyTorch_Reduced.py, PlacesCNN.py, resnet.py, segmentation_nn.py, DSCLRCN_PyTorch_NoLSTM.py, local_cnn.py, places_cnn.py, models.py, data_utils.py, solver.py\nits tags are ['saliency detection']\n\n\nrepository Bojian/Hilbert-CNN\ncontains files functions.py, main.py, network.py, new_main.py, read_file, one_hot, snake_curve, cut, seq2num, diag_snake\nits tags are ['classification', 'general classification']\n\nrepository Doyosae/Deep_Complex_Networks\ncontains files: activation.py, STFT.py, STFT.py, layer.py, InverseSTFT, STFT, window_sumsquare, CLeaky_ReLU, CReLU, modReLU\ntags:  ['audio processing','speech recognition']\n\nrepository Fangliu/ResNet"
  },
  {
    "repo": "DreadPiratePsyopus/Pytorch-yolo-phoc",
    "predicted_tasks": ":  ['object detection', 'image classification','region loss', 'object recognition', 'general classification']",
    "repo_with_tasks": " DreadPiratePsyopus/Pytorch-yolo-phoc\ncontains files: region_loss.py, detect_folder.py, lmdb_utils.py, train.py, train_lmdb.py, dataset.py, PHOC.py, detect.py, text_detector.py, image.py\ntags:  ['object detection', 'image classification','region loss', 'object recognition', 'general classification']",
    "generated_text": "repository AFAgarap/cnn-svm\ncontains files main.py, cnn_svm.py, cnn.py, data.py, cnn_softmax.py, cnn.py, parse_args, CNN, create_dataset, load_tfds\nits tags are ['representation learning', 'image classification','speech recognition', 'text classification', 'intrusion detection', 'general classification']\n\n\nrepository BordiaS/layoutlm\ncontains files setup.py, DocVQA.py, run_seq_labeling.py, rvl_cdip.py, preprocess.py, run_classification.py, layoutlm.py, funsd.py, load_DocVQA.py, train\nits tags are ['transfer learning', 'document classification', 'document ai', 'image classification', 'key information extraction', 'classification', 'document image classification', 'object recognition', 'general classification', 'document layout analysis']\n\nrepository DreadPiratePsyopus/Pytorch-yolo-phoc\ncontains files: region_loss.py, detect_folder.py, lmdb_utils.py, train.py, train_lmdb.py, dataset.py, PHOC.py, detect.py, text_detector.py, image.py\ntags:  ['object detection', 'image classification','region loss', 'object recognition', 'general classification']"
  },
  {
    "repo": "Drenata/EBM-buffer-PCD-Pytorch",
    "predicted_tasks": ":  [image classification]\n\nrepository djuric/Deep-Q-Network\ncontains",
    "repo_with_tasks": " Drenata/EBM-buffer-PCD-Pytorch\ncontains files: net.py, trainer.py, sample_replay_buffer.py, StandardCNN, StandardBNCNN, ConvBNReLU, SampleReplayBuffer, SGLDTrainer\ntags:  [image classification]\n\n",
    "generated_text": "repository AI-Guru/SincNet\ncontains files demo.py, sincnet.py, SincConv1D, debug_print, sinc, print, reverse, concatenate, debug_print, sin\nits tags are ['speaker verification','speaker recognition','speaker identification']\n\n\nrepository BorealisAI/keyphrase-generation\ncontains files diversity_eval.py, copy_seq2seq_attn.py, exact_match.py, digit_filter.py, keyphrase_seq2seq_copynet_jsonl_reader.py, eval_config.py, seq2seq_predictor.py, evaluate_prediction.py, convert_json_to_txts.py, common_utils.py\nits tags are ['keyphrase generation', 'text generation']\n\nrepository Drenata/EBM-buffer-PCD-Pytorch\ncontains files: net.py, trainer.py, sample_replay_buffer.py, StandardCNN, StandardBNCNN, ConvBNReLU, SampleReplayBuffer, SGLDTrainer\ntags:  [image classification]\n\nrepository djuric/Deep-Q-Network\ncontains"
  },
  {
    "repo": "Duchstf/CNN-Architectural-Analysis",
    "predicted_tasks": ": 3d convolutional neural network, CNN architecture analysis, residual network\n\nrepository jeremy",
    "repo_with_tasks": " Duchstf/CNN-Architectural-Analysis\ncontains files: feature_cutting.py, feature_cutting.py, Residual_Visualization.py, test.py, get_simple_attributes.py, caffe_pb2.py, Network.py, Confusion_matrix.py, scrape_output, UnionIter\ntags: 3d convolutional neural network, CNN architecture analysis, residual network\n\n",
    "generated_text": "repository AI-luyuan/aegcn\ncontains files hgcn_gae.py, GTConv, f1_score, precision, true_negative, accuracy, recall, false_positive, false_negative, true_positive\nits tags are ['node classification', 'graph attention']\n\n\nrepository BorgwardtLab/covid19_ultrasound\ncontains files evaluate_genesis.py, cross_val_splitter.py, video_classifier_table.py, grad_cam.py, utils_butterfly_data.py, test.py, generate_gradcams.py, model.py, train_comet_covid19.py, app.py\nits tags are ['contrastive learning', 'frame']\n\nrepository Duchstf/CNN-Architectural-Analysis\ncontains files: feature_cutting.py, feature_cutting.py, Residual_Visualization.py, test.py, get_simple_attributes.py, caffe_pb2.py, Network.py, Confusion_matrix.py, scrape_output, UnionIter\ntags: 3d convolutional neural network, CNN architecture analysis, residual network\n\nrepository jeremy"
  },
  {
    "repo": "DynamicSanitizer/DySan",
    "predicted_tasks": ":  ['dynamic sanitization','sanitize','sanitation','safety']",
    "repo_with_tasks": " DynamicSanitizer/DySan\ncontains files: Models.py, int_float.py, Metrics.py, Metrics.py, PreProcessing.py, features.py, CustomLosses.py, Analysis.py, pytorchtools.py, features.py\ntags:  ['dynamic sanitization','sanitize','sanitation','safety']",
    "generated_text": "repository AI4Finance-LLC/DP-LSTM-Differential-Privacy-Stock-Prediction-Financial-News-NIPS-2019\ncontains files 1_load_News_data.py, 4_cut_data.py, 7_DP_LSTM.py, 9_plot_prediction_result_of_LSTM_based_on_price.py, 3_data_process.py, 2_feature_engineer.py, 6_LSTM_with_news_NIPS_5_dimention.py, 8_plot_mean_prediction_accuracies.py, 5_LSTM_wihtout_news_NIPS_sp500.py, list_files\nits tags are ['stock prediction','stock price prediction']\n\n\nrepository BoulderDS/feature-importance\ncontains files experiments.py, monitoring.py, file_utils.py, convert_transfo_xl_checkpoint_to_pytorch.py, explainer.py, sampling.py, datasets.py, modeling_gpt2.py, optimization_openai.py, setup.py\nits tags are ['text classification', 'general classification', 'feature importance']\n\nrepository DynamicSanitizer/DySan\ncontains files: Models.py, int_float.py, Metrics.py, Metrics.py, PreProcessing.py, features.py, CustomLosses.py, Analysis.py, pytorchtools.py, features.py\ntags:  ['dynamic sanitization','sanitize','sanitation','safety']"
  },
  {
    "repo": "EMI-Group/RelativeNAS",
    "predicted_tasks": ":  [relative_nas]\n\nrepository Github/tesseract-ocr\ncontains files:",
    "repo_with_tasks": " EMI-Group/RelativeNAS\ncontains files: multadds_count.py, trainer.py, tiny_imagenet_train_cfg.py, train_imagenet.py, genotypes.py, collections.py, train.py, test.py, prefetch_data.py, model_search.py\ntags:  [relative_nas]\n\n",
    "generated_text": "repository AIMLab-UBC/MIDL2020\ncontains files postprocess.py, create_patient_groups.py, preprocess.py, patch_dataset.py, extract_patches.py, config.py, base_dataset.py, models.py, slide_level.py, subtype_enum.py\nits tags are ['transfer learning', 'whole slide images', 'general classification']\n\n\nrepository Bread-and-Code/Text-Summarization\ncontains files texttokenizer.py, padding_and_model.py, model.py, contraction.py, distribution.py, RNN_training_decoding_layer.py, libraries.py, conclu.py, attention.py, misc_batches.py\nits tags are ['language modelling', 'document summarization', 'abstractive text summarization', 'text summarization']\n\nrepository EMI-Group/RelativeNAS\ncontains files: multadds_count.py, trainer.py, tiny_imagenet_train_cfg.py, train_imagenet.py, genotypes.py, collections.py, train.py, test.py, prefetch_data.py, model_search.py\ntags:  [relative_nas]\n\nrepository Github/tesseract-ocr\ncontains files:"
  },
  {
    "repo": "EagleW/PaperRobot",
    "predicted_tasks": ":  [paper, robot]\n\nrepository EagleW/PaperRobot\ncontains files:",
    "repo_with_tasks": " EagleW/PaperRobot\ncontains files: New, paper, Encoder.py, New, paper, preprocessing.py, Existing, paper, train.py, New\ntags:  [paper, robot]\n\n",
    "generated_text": "repository AIS-Bonn/MotionSegmentation\ncontains files utils.py, ssim, complex_conj, complex_mul, showSeq, MovingFGOnBGDataset, gaussian, createarray, flip, return2DGaussian\nits tags are ['motion segmentation', 'video prediction', 'frame']\n\n\nrepository BriansIDP/RTLM\ncontains files exp_utils.py, train_rnn.py, proj_adaptive_softmax.py, data_utils.py, mem_transformer_rnn.py, log_uniform_sampler.py, rescore.py, vocabulary.py, adaptive_softmax.py, data_parallel.py\nits tags are ['speech recognition', 'automatic speech recognition']\n\nrepository EagleW/PaperRobot\ncontains files: New, paper, Encoder.py, New, paper, preprocessing.py, Existing, paper, train.py, New\ntags:  [paper, robot]\n\nrepository EagleW/PaperRobot\ncontains files:"
  },
  {
    "repo": "EdinburghNLP/XSum",
    "predicted_tasks": ":  ['summarization', 'nlp', 'generative models', 'language models', 'ne",
    "repo_with_tasks": " EdinburghNLP/XSum\ncontains files: multiprocessing_pdb.py, bleu.py, adagrad.py, indexed_dataset.py, sgd.py, generate.py, parse-bbc-html-data.py, sgd.py, setup.py, fairseq_criterion.py\ntags:  ['summarization', 'nlp', 'generative models', 'language models', 'ne",
    "generated_text": "repository AKASH2907/indian_landmark_recognition\ncontains files delfextract.py, codes, gen_array.py, codes, modify_data.py, sklearn_knn.py, inception_resnet_v2_finetuning.py, evaluation.py, inception_v3_finetuning.py, saliency.py\nits tags are ['retinal oct disease classification', 'image classification', 'classification', 'robust classification','saliency detection', 'general classification', 'frame', 'landmark recognition']\n\n\nrepository BryanPlummer/cite\ncontains files main.py, model.py, data_loader.py, load_word_embeddings, DataLoader, test, get_data_loaders, main, train, process_epoch\nits tags are ['object detection', 'visual grounding', 'phrase grounding', 'text matching']\n\nrepository EdinburghNLP/XSum\ncontains files: multiprocessing_pdb.py, bleu.py, adagrad.py, indexed_dataset.py, sgd.py, generate.py, parse-bbc-html-data.py, sgd.py, setup.py, fairseq_criterion.py\ntags:  ['summarization', 'nlp', 'generative models', 'language models', 'ne"
  },
  {
    "repo": "EdwardSmith1884/GEOMetrics",
    "predicted_tasks": ": 3d reconstruction, geometric metrics, point cloud registration, point cloud matching, point cloud comparison,",
    "repo_with_tasks": " EdwardSmith1884/GEOMetrics\ncontains files: voxel.py, build.py, auto_encoder.py, GEOMetrics.py, chamfer_distance.py, models.py, layers.py, loss_comparison.py, blender_convert.py, layers.py\ntags: 3d reconstruction, geometric metrics, point cloud registration, point cloud matching, point cloud comparison,",
    "generated_text": "repository AMLab-Amsterdam/FNP\ncontains files models.py, utils.py, ClassificationFNP, RegressionFNP, LogitRelaxedBernoulli, one_hot, Flatten, sample_bipartite, sample_DAG, logitexp\nits tags are ['image classification']\n\n\nrepository Burton2000/semantic_segmentation\ncontains files training.py, main.py, model.py, random_crop, log_images, uncompiled_unet, lr_schedule, central_crop, concat, take\nits tags are ['medical image segmentation', 'thermal image segmentation', 'cell segmentation', 'pancreas segmentation', 'video polyp segmentation','multi tissue nucleus segmentation','retinal vessel segmentation','skin cancer segmentation','semantic segmentation']\n\nrepository EdwardSmith1884/GEOMetrics\ncontains files: voxel.py, build.py, auto_encoder.py, GEOMetrics.py, chamfer_distance.py, models.py, layers.py, loss_comparison.py, blender_convert.py, layers.py\ntags: 3d reconstruction, geometric metrics, point cloud registration, point cloud matching, point cloud comparison,"
  },
  {
    "repo": "EkdeepSLubana/OrthoReg",
    "predicted_tasks": ":  ['orthogonality','regularization', 'optimization']\n\nrepository EvanH",
    "repo_with_tasks": " EkdeepSLubana/OrthoReg\ncontains files: main.py, eval.py, imp_estimator.py, config.py, models.py, pruner.py, format_time, progress_bar, test, cal_flops\ntags:  ['orthogonality','regularization', 'optimization']\n\n",
    "generated_text": "repository ANONYMOUS-GURU/RareEventDetection\ncontains files model_utils.py, data_helper.py, train.py, predict.py, make_temporal_features, helper, build_model, make_temporal_features, plot_confusion_matrix, test_model\nits tags are ['classification', 'time series', 'general classification']\n\n\nrepository CACTuS-AI/GlowIP\ncontains files coupling.py, glow.py, solve_inpainting.py, denoiser.py, process_celeba.py, align_face.py, train_glow.py, split.py, utils.py, inpainter.py\nits tags are ['compressive sensing', 'denoising']\n\nrepository EkdeepSLubana/OrthoReg\ncontains files: main.py, eval.py, imp_estimator.py, config.py, models.py, pruner.py, format_time, progress_bar, test, cal_flops\ntags:  ['orthogonality','regularization', 'optimization']\n\nrepository EvanH"
  },
  {
    "repo": "ElementAI/N-BEATS",
    "predicted_tasks": ":  ['traffic analysis', 'travel time prediction']\n\nrepository ElementAI/N-BE",
    "repo_with_tasks": " ElementAI/N-BEATS\ncontains files: test_tourism.py, sampler.py, traffic.py, metrics.py, main.py, ops.py, m3.py, main.py, snapshots.py, utils.py\ntags:  ['traffic analysis', 'travel time prediction']\n\n",
    "generated_text": "repository ART-Group-it/KERMIT\ncontains files dtk2_deprecated.py, convolution_test.py, models.py, dataset_reader.py, tree_encode.py, permutation_test.py, fourier_test.py, utils.py, prove.py, dataset_creator.py\nits tags are ['text classification','representation learning']\n\n\nrepository CAPTAIN-WHU/DOTA_devkit\ncontains files dota_utils.py, setup.py, nms_wrapper.py, polyiou.py, DOTA.py, ResultMerge.py, SplitOnlyImage_multi_process.py, setup.py, SplitOnlyImage.py, dota_evaluation_task2.py\nits tags are ['object detection', 'object detection in aerial images']\n\nrepository ElementAI/N-BEATS\ncontains files: test_tourism.py, sampler.py, traffic.py, metrics.py, main.py, ops.py, m3.py, main.py, snapshots.py, utils.py\ntags:  ['traffic analysis', 'travel time prediction']\n\nrepository ElementAI/N-BE"
  },
  {
    "repo": "EleutherAI/The-Pile",
    "predicted_tasks": ":  ['nlp', 'text classification']\n\nrepository eleutherAI/eleutherAI-models",
    "repo_with_tasks": " EleutherAI/The-Pile\ncontains files: profanity_analysis_pass1.py, tfds_pile.py, lang_len_analysis_pass1.py, fix_dm_math.py, make_excludes_lambada_wikitext.py, pass2_shuffle_holdout.py, pile_proportions_sanitycheck.py, utils.py, setup.py, datasets.py\ntags:  ['nlp', 'text classification']\n\n",
    "generated_text": "repository AVBelyy/Rysearch\ncontains files artm_bridge.py, arbitrary.py, artm_lib.py, hierarchy_utils.py, hierarchy_utils.py, hierarchy_utils.py, artm_proxy.py, text_utils.py, hARTM, ARTM_Level\nits tags are ['topic models']\n\n\nrepository CAVED123/tensorforce-\ncontains files layer.py, test_agents.py, openai_retro.py, run.py, network.py, test_random_agent.py, test_parameters.py, constant.py, openai_gym.py, test_specifications.py\nits tags are ['reinforcement learning']\n\nrepository EleutherAI/The-Pile\ncontains files: profanity_analysis_pass1.py, tfds_pile.py, lang_len_analysis_pass1.py, fix_dm_math.py, make_excludes_lambada_wikitext.py, pass2_shuffle_holdout.py, pile_proportions_sanitycheck.py, utils.py, setup.py, datasets.py\ntags:  ['nlp', 'text classification']\n\nrepository eleutherAI/eleutherAI-models"
  },
  {
    "repo": "EliasNehme/DeepSTORM3D",
    "predicted_tasks": ": 3d convolutional neural networks, deep learning, stochastic optimization, training and testing of CNNs",
    "repo_with_tasks": " EliasNehme/DeepSTORM3D\ncontains files: GenerateTrainingExamples.py, assessment_utils.py, data_utils.py, demo1.py, loss_utils.py, parameter_setting_demo1.py, cnn_utils.py, demo3.py, parameter_setting_demo4.py, parameter_setting_demo3.py\ntags: 3d convolutional neural networks, deep learning, stochastic optimization, training and testing of CNNs",
    "generated_text": "repository AaltoPML/Rethinking-pooling-in-GNNs\ncontains files main_gmn.py, datasets.py, params.py, mod_zinc.py, graclus.py, main_diffpool.py, train.py, negative_edges.py, params.py, params_v2.py\nits tags are ['representation learning', 'graph clustering', 'graph classification', 'node classification', 'link prediction', 'general classification', 'graph representation learning','semantic segmentation']\n\n\nrepository CHELSEA234/SkelNet_motion_prediction\ncontains files data_helper.py, seq2seq_model.py, seq2seq_model.py, data_utils.py, spatial_decoder.py, seq2seq_model.py, long_pre_extraction.py, seq2seq_model_t.py, data_utils.py, long_pre_extraction.py\nits tags are ['human motion prediction','motion prediction']\n\nrepository EliasNehme/DeepSTORM3D\ncontains files: GenerateTrainingExamples.py, assessment_utils.py, data_utils.py, demo1.py, loss_utils.py, parameter_setting_demo1.py, cnn_utils.py, demo3.py, parameter_setting_demo4.py, parameter_setting_demo3.py\ntags: 3d convolutional neural networks, deep learning, stochastic optimization, training and testing of CNNs"
  },
  {
    "repo": "ElleryL/GradientEstimator",
    "predicted_tasks": ":  [VAE, Variational Autoencoders]\n\nrepository elleryl/Natural",
    "repo_with_tasks": " ElleryL/GradientEstimator\ncontains files: main.py, utils.py, vae.py, test, train_dreg, train_iwae, gaussian_log_prob, bernoulli_log_prob, VAE, to\ntags:  [VAE, Variational Autoencoders]\n\n",
    "generated_text": "repository AaronCCWong/Show-Attend-and-Tell\ncontains files encoder.py, generate_json_data.py, attention.py, decoder.py, train.py, utils.py, generate_caption.py, dataset.py, Attention, pil_loader\nits tags are ['image captioning', 'translation','machine translation', 'dialogue generation']\n\n\nrepository CKRC24/Listen-and-Translate\ncontains files retrieval_predict.py, word2id, array, split, len, append\nits tags are ['machine translation', 'conversational response selection','speech recognition', 'answer selection', 'translation']\n\nrepository ElleryL/GradientEstimator\ncontains files: main.py, utils.py, vae.py, test, train_dreg, train_iwae, gaussian_log_prob, bernoulli_log_prob, VAE, to\ntags:  [VAE, Variational Autoencoders]\n\nrepository elleryl/Natural"
  },
  {
    "repo": "Eltomad/Tiny_Faces",
    "predicted_tasks": ":  face detection, face alignment, face verification, face recognition, face landmark detection, face feature",
    "repo_with_tasks": " Eltomad/Tiny_Faces\ncontains files: util.py, tiny_face_model.py, tiny_face_eval.py, matconvnet_hr101_to_pickle.py, evaluate, main, overlay_bounding_boxes, Model, nms, int\ntags:  face detection, face alignment, face verification, face recognition, face landmark detection, face feature",
    "generated_text": "repository AbdalaDiasse/Video-classification-for-oil-quality-estimation\ncontains files main.py, rgb_resnet.py, build_of.py, ucf101.py, video_transforms.py, temporal_demo.py, VideoSpatialPrediction.py, flow_resnet.py, VideoTemporalPrediction.py, spatial_demo.py\nits tags are ['representation learning', 'optical flow estimation', 'video classification', 'action recognition in videos', 'action recognition', 'data augmentation', 'temporal action localization']\n\n\nrepository CMU-Perceptual-Computing-Lab/MonocularTotalCapture\ncontains files process_MPII_mask.py, MultiDataset.py, collect_openpose.py, HumanReader.py, OpenposeReader.py, collect_a4.py, RHDReader.py, DomeReader.py, general.py, AdamModel.py\nits tags are ['3d human pose estimation','monocular 3d human pose estimation', 'hand pose estimation']\n\nrepository Eltomad/Tiny_Faces\ncontains files: util.py, tiny_face_model.py, tiny_face_eval.py, matconvnet_hr101_to_pickle.py, evaluate, main, overlay_bounding_boxes, Model, nms, int\ntags:  face detection, face alignment, face verification, face recognition, face landmark detection, face feature"
  },
  {
    "repo": "EmergentSystemLabStudent/SpCoSLAM_Lets",
    "predicted_tasks": ":  [\"spcoslam\", \"lets\"]\n\nrepository EmergentSystemLabStudent/SpCoS",
    "repo_with_tasks": " EmergentSystemLabStudent/SpCoSLAM_Lets\ncontains files: binaryprotoTOnpy.py, new_place_draw_online.py, learnSpCoSLAM1.0.py, learnSpCoSLAM3.2.py, CNN_place_LetsBot3.py, run_SpCoSLAM_Letsbot.py, data_write.py, map_saver.py, submodules.py, test_map.py\ntags:  [\"spcoslam\", \"lets\"]\n\n",
    "generated_text": "repository Abdulmajid-Murad/IoT-Sensor-Gym\ncontains files run.py, evaluate.py, SensorGym.py, evaluate, train, build_env, main, evaluate, train, build_env\nits tags are ['reinforcement learning']\n\n\nrepository CODE-SUBMIT/Graph_Neighborhood_1\ncontains files layers.py, lds_wine_gpu0.py, run_pubmed.py, test_weisfeiler_lehman.py, main.py, optimizer.py, models.py, train_cora.py, layer.py, lds_fma.py\nits tags are ['graph classification','representation learning', 'general classification', 'link prediction']\n\nrepository EmergentSystemLabStudent/SpCoSLAM_Lets\ncontains files: binaryprotoTOnpy.py, new_place_draw_online.py, learnSpCoSLAM1.0.py, learnSpCoSLAM3.2.py, CNN_place_LetsBot3.py, run_SpCoSLAM_Letsbot.py, data_write.py, map_saver.py, submodules.py, test_map.py\ntags:  [\"spcoslam\", \"lets\"]\n\nrepository EmergentSystemLabStudent/SpCoS"
  },
  {
    "repo": "EmmaW8/BEAL",
    "predicted_tasks": ":  [object detection]\n\nrepository EmmaW8/Detection\ncontains files: comm.",
    "repo_with_tasks": " EmmaW8/BEAL\ncontains files: comm.py, aspp.py, deeplabv3.py, resnet.py, custom_transforms.py, train.py, xception.py, Utils.py, test.py, drn.py\ntags:  [object detection]\n\n",
    "generated_text": "repository AbhilashaRavichander/NLI_StressTest\ncontains files eval.py, gen_num_test.py, make_antonym_adv_samples.py, make_distraction_adv_samples_jsonl.py, quant_ner.py, quant_example_gen.py, make_grammar_adv_samples_jsonl.py, generate_report, plot, tokenize\nits tags are ['natural language inference', 'natural language understanding']\n\n\nrepository COMP6248-Reproducability-Challenge/Transfer-Learning\ncontains files Shani, Gamrian, Original, main_imitation.py, A3C_model.py, Shani, Gamrian, Original, envs.py, Shani\nits tags are ['transfer learning','reinforcement learning', 'imitation learning', 'translation', 'image to image translation']\n\nrepository EmmaW8/BEAL\ncontains files: comm.py, aspp.py, deeplabv3.py, resnet.py, custom_transforms.py, train.py, xception.py, Utils.py, test.py, drn.py\ntags:  [object detection]\n\nrepository EmmaW8/Detection\ncontains files: comm."
  },
  {
    "repo": "EngSalem/Text-Classification-of-the-shelf-with-a-normalizer-for-Arabic-text-",
    "predicted_tasks": ":  [arabic]\n\n\nrepository engsalem/Text-Classification-of-the",
    "repo_with_tasks": " EngSalem/Text-Classification-of-the-shelf-with-a-normalizer-for-Arabic-text-\ncontains files: BaselineModels.py, test_already_existing.py, text_normalization.py, data_helpers.py, test_baselines.py, General, AttentionBiGru, clstm, cnn_kim, cnn_char\ntags:  [arabic]\n\n\n",
    "generated_text": "repository Abhipanda4/GMMN-Pytorch\ncontains files gmmn.py, autoencoder.py, visualize.py, train.py, constants.py, Autoencoder, GMMN, train_one_step, get_scale_matrix, to\nits tags are ['two sample testing']\n\n\nrepository CPSSD/LUCAS\ncontains files cross_validate.py, userStats.py, formatting.py, amazon_bins.py, lucas.py, exp8_feature_extraction.py, pytorch_bert_classifier.py, word_normalization.py, formatting_test.py, exp2_feature_extraction.py\nits tags are ['spam detection']\n\nrepository EngSalem/Text-Classification-of-the-shelf-with-a-normalizer-for-Arabic-text-\ncontains files: BaselineModels.py, test_already_existing.py, text_normalization.py, data_helpers.py, test_baselines.py, General, AttentionBiGru, clstm, cnn_kim, cnn_char\ntags:  [arabic]\n\n\nrepository engsalem/Text-Classification-of-the"
  },
  {
    "repo": "EnyanDai/FairGNN",
    "predicted_tasks": ":  ['Graph Neural Network', 'Graph Convolutional Network', 'Fairness', 'General",
    "repo_with_tasks": " EnyanDai/FairGNN\ncontains files: utils.py, train_fairGNN.py, GAT.py, train_sens.py, FairGNN.py, GCN.py, fair_metric, normalize, sparse_mx_to_torch_sparse_tensor, load_pokec_emb\ntags:  ['Graph Neural Network', 'Graph Convolutional Network', 'Fairness', 'General",
    "generated_text": "repository AceChuse/DCN\ncontains files feature_embedding.py, dropblock.py, omni_fmeta.py, mini_images.py, leo.py, parallel.py, densenet.py, fuzzymeta.py, omniglot_resized.py, ResNet12_embedding.py\nits tags are ['meta learning', 'ensemble learning', 'few shot learning', 'general classification']\n\n\nrepository CRIPAC-DIG/TextING\ncontains files train.py, build_graph.py, layers.py, models.py, metrics.py, utils.py, inits.py, remove_words.py, build_graph, zeros\nits tags are ['classification', 'text classification', 'document embedding', 'general classification']\n\nrepository EnyanDai/FairGNN\ncontains files: utils.py, train_fairGNN.py, GAT.py, train_sens.py, FairGNN.py, GCN.py, fair_metric, normalize, sparse_mx_to_torch_sparse_tensor, load_pokec_emb\ntags:  ['Graph Neural Network', 'Graph Convolutional Network', 'Fairness', 'General"
  },
  {
    "repo": "Ereebay/CV-Documents",
    "predicted_tasks": ":  ['image classification', 'object detection']",
    "repo_with_tasks": " Ereebay/CV-Documents\ncontains files: image, ifd_train.py, 04_word2vec_eager_starter.py, image, eval.py, yolo_net.py, image, ifd_eval.py, 03_linreg_starter.py, train_yolo_v1.py\ntags:  ['image classification', 'object detection']",
    "generated_text": "repository AdaCompNUS/magic\ncontains files plot_reward_with_length.py, data_store.py, simulator.py, evaluate.py, rl.py, environment.py, perception.py, test_planning.py, statistics.py, benchmark.py\nits tags are ['decision making', 'decision making under uncertainty']\n\n\nrepository CSCI4850/S20-team3-project\ncontains files ReplayMemory.py, HyperParameters.py, Galaga.py, Galaga.py, ReplayMemory.py, GalagaAgent.py, demo.py, ReplayMemory.py, ReplayMemory.py, Galaga.py\nits tags are ['atari games','reinforcement learning']\n\nrepository Ereebay/CV-Documents\ncontains files: image, ifd_train.py, 04_word2vec_eager_starter.py, image, eval.py, yolo_net.py, image, ifd_eval.py, 03_linreg_starter.py, train_yolo_v1.py\ntags:  ['image classification', 'object detection']"
  },
  {
    "repo": "EricArazo/PseudoLabeling",
    "predicted_tasks": ":  ['semantic segmentation', 'pseudolabeling']\n\nrepository kylemcg",
    "repo_with_tasks": " EricArazo/PseudoLabeling\ncontains files: ssl_networks.py, criterion.py, visualize.py, train.py, TwoSampler.py, train.py, utils_ssl.py, AverageMeter.py, train.py, PreResNet.py\ntags:  ['semantic segmentation', 'pseudolabeling']\n\n",
    "generated_text": "repository AdamStelmaszczyk/dqn\ncontains files replay_buffer.py, run.py, atari_wrappers.py, tensor_board_logger.py, MaxAndSkipEnv, make_atari, EpisodicLifeEnv, ScaledFloatFrame, FireResetEnv, WarpFrame\nits tags are ['reinforcement learning']\n\n\nrepository CUAI/Differentiable-Frechet-Mean\ncontains files hyperboloid_backward.py, ball.py, setup.py, hyperboloid.py, ball_backward.py, riemannian_batch_norm.py, hyperboloid_forward.py, manifold.py, utils.py, ball_forward.py\nits tags are ['representation learning']\n\nrepository EricArazo/PseudoLabeling\ncontains files: ssl_networks.py, criterion.py, visualize.py, train.py, TwoSampler.py, train.py, utils_ssl.py, AverageMeter.py, train.py, PreResNet.py\ntags:  ['semantic segmentation', 'pseudolabeling']\n\nrepository kylemcg"
  },
  {
    "repo": "ErikGDev/instance-segmentation",
    "predicted_tasks": ":  instance segmentation, object detection, semantic segmentation, instance segmentation, object detection, semantic segment",
    "repo_with_tasks": " ErikGDev/instance-segmentation\ncontains files: c2_model_loading.py, pascal_voc_evaluation.py, swap_align2nat.py, backbone.py, rpn_outputs.py, sem_seg_evaluation.py, roi_align.py, test_time_augmentation.py, cityscapes_evaluation.py, test_rotated_boxes.py\ntags:  instance segmentation, object detection, semantic segmentation, instance segmentation, object detection, semantic segment",
    "generated_text": "repository AdeDZY/K-NRM\ncontains files generator.py, base_conf.py, setup.py, gen_term_pair_from_trec.py, base.py, gen_trec_from_score.py, generate_click_term_pair.py, model_knrm.py, base.py, model_base.py\nits tags are ['learning to rank', 'translation', 'word embeddings', 'document ranking', 'ad hoc information retrieval']\n\n\nrepository CVRL/human-model-similarity\ncontains files rdm_sim_score.py, data_utils.py, kitti_settings.py, prednet.py, data_utils_vlog.py, kitti_evaluate.py, local_sage.py, rdm_sim_score.py, vlog_evaluate.py, test-exp3.py\nits tags are ['frame']\n\nrepository ErikGDev/instance-segmentation\ncontains files: c2_model_loading.py, pascal_voc_evaluation.py, swap_align2nat.py, backbone.py, rpn_outputs.py, sem_seg_evaluation.py, roi_align.py, test_time_augmentation.py, cityscapes_evaluation.py, test_rotated_boxes.py\ntags:  instance segmentation, object detection, semantic segmentation, instance segmentation, object detection, semantic segment"
  },
  {
    "repo": "EssayKillerBrain/NLP-BERT-Chinese",
    "predicted_tasks": ":  [bert, chinese]\n\nrepository jianjunzhang/Bert-Transform",
    "repo_with_tasks": " EssayKillerBrain/NLP-BERT-Chinese\ncontains files: pretrain.py, feed_forward.py, token.py, vocab.py, gelu.py, transformer.py, segment.py, position.py, optim_schedule.py, __main__.py\ntags:  [bert, chinese]\n\n",
    "generated_text": "repository Aditi138/MorphologicalAnalysis\ncontains files args.py, pre_process.py, pickSentsRandomly.py, evaluate_2019_task2.py, mapTaskData.py, FindErrorsPerCategory.py, model_builder.py, decoders.py, makeStatisticsVectors.py, data_loader.py\nits tags are ['morphological analysis', 'lemmatization', 'pos']\n\n\nrepository CXMANDTXW/MTL-Using-Uncertainty-to-Weigh-Losses\ncontains files code.py, layer, mlt, gen_data, dot, randn, mean, exp, zip\nits tags are ['multi task learning', 'instance segmentation', 'general classification','semantic segmentation']\n\nrepository EssayKillerBrain/NLP-BERT-Chinese\ncontains files: pretrain.py, feed_forward.py, token.py, vocab.py, gelu.py, transformer.py, segment.py, position.py, optim_schedule.py, __main__.py\ntags:  [bert, chinese]\n\nrepository jianjunzhang/Bert-Transform"
  },
  {
    "repo": "EuphoriaYan/ChatRobot-For-Keras2",
    "predicted_tasks": ":  [chatbot]\n\nrepository gabor/cnn-for-detection\ncontains",
    "repo_with_tasks": " EuphoriaYan/ChatRobot-For-Keras2\ncontains files: data_generate.py, word2vec.py, chat_robot.py, advanced_cells.py, models.py, theano_backend.py, train.py, encoder2decoder.py, test.py, word2vec_plot.py\ntags:  [chatbot]\n\n",
    "generated_text": "repository Adrian398/CB-Net-EDD\ncontains files io.py, test_smooth_l1_loss_op.py, blob.py, rfcn_heads.py, convert_pkl_to_pb.py, dataset_catalog.py, segms.py, coco_to_cityscapes_id.py, convert_selective_search.py, reval.py\nits tags are ['object detection', 'instance segmentation','semantic segmentation']\n\n\nrepository Cadene/recipe1m.bootstrap.pytorch\ncontains files old_tsne.py, batch_sampler.py, trijoint.py, ingrs_count.py, factory.py, pairwise.py, old_top5.py, api.py, make_menu.py, old_ingrs_to_img_by_class.py\nits tags are ['structured prediction','metric learning', 'image retrieval', 'cross modal retrieval']\n\nrepository EuphoriaYan/ChatRobot-For-Keras2\ncontains files: data_generate.py, word2vec.py, chat_robot.py, advanced_cells.py, models.py, theano_backend.py, train.py, encoder2decoder.py, test.py, word2vec_plot.py\ntags:  [chatbot]\n\nrepository gabor/cnn-for-detection\ncontains"
  },
  {
    "repo": "Evfro/recsys19_hybridsvd",
    "predicted_tasks": ":  ['recommender systems', 'collaborative filtering']\n\nrepository kennyzhang",
    "repo_with_tasks": " Evfro/recsys19_hybridsvd\ncontains files: data_preprocessing.py, lce.py, hybrids.py, utils.py, scaledsvd.py, prepare_data_model, get_yahoo_music_data, get_similarity_data, SimilarityDataModel, get_amazon_data\ntags:  ['recommender systems', 'collaborative filtering']\n\n",
    "generated_text": "repository AhmadSakor/falcon\ncontains files main.py, DBpedia_spotlight.py, EARL.py, addIndex.py, TagMe.py, evaluation_paper.py, searchIndex.py, stopwords.py, DBpedia_spotlight.py, turtle_reader.py\nits tags are ['entity linking', 'named entity recognition']\n\n\nrepository CalciferZh/minimal-hand\ncontains files config.py, prepare_mano.py, plot.py, app.py, hand_mesh.py, capture.py, utils.py, network.py, kinematics.py, wrappers.py\nits tags are ['pose estimation']\n\nrepository Evfro/recsys19_hybridsvd\ncontains files: data_preprocessing.py, lce.py, hybrids.py, utils.py, scaledsvd.py, prepare_data_model, get_yahoo_music_data, get_similarity_data, SimilarityDataModel, get_amazon_data\ntags:  ['recommender systems', 'collaborative filtering']\n\nrepository kennyzhang"
  },
  {
    "repo": "Evolving-AI-Lab/synthesizing",
    "predicted_tasks": ":  [generative adversarial networks]\n\nrepository Github/deepmind\ncontains files: deep",
    "repo_with_tasks": " Evolving-AI-Lab/synthesizing\ncontains files: patchShow.py, settings.py, act_max.py, save_image, main, make_step_net, get_code, activation_maximization, write_label, make_step_generator\ntags:  [generative adversarial networks]\n\n",
    "generated_text": "repository Ahsanr312/Object-Detection-and-Tracking-using-YOLOv3-and-DeepSort\ncontains files object_tracker.py, dataset.py, freeze_model.py, iou_matching.py, nn_matching.py, track.py, models.py, linear_assignment.py, kalman_filter.py, generate_detections.py\nits tags are ['large scale person re identification', 'person re identification', 'one stage anchor free oriented object detection', 'video instance segmentation', 'object detection','multiple object tracking', 'frame','real time object detection', 'object tracking']\n\n\nrepository CaoShuning/MIXUP\ncontains files lenet.py, mobilenet.py, densenet3.py, densenet.py, densenet_efficient_multi_gpu.py, googlenet.py, resnet.py, train.py, resnext.py, utils.py\nits tags are ['image classification','semi supervised image classification', 'domain generalization']\n\nrepository Evolving-AI-Lab/synthesizing\ncontains files: patchShow.py, settings.py, act_max.py, save_image, main, make_step_net, get_code, activation_maximization, write_label, make_step_generator\ntags:  [generative adversarial networks]\n\nrepository Github/deepmind\ncontains files: deep"
  },
  {
    "repo": "FGiuliari/Trajectory-Transformer",
    "predicted_tasks": ":  [trajectory transformers]\n\nrepository johannesbauer/DeepSets",
    "repo_with_tasks": " FGiuliari/Trajectory-Transformer\ncontains files: generator.py, pointerwise_feedforward.py, label_smoothing.py, encoder.py, train_individualTF.py, encoder_layer.py, embeddings.py, sublayer_connection.py, noam_opt.py, decoder_layer.py\ntags:  [trajectory transformers]\n\n",
    "generated_text": "repository AishwaryaAgrawal/GVQA\ncontains files combine_ap_and_vv_results.py, save_json, load_json, main, dump, open, print, load_json, save_json\nits tags are ['visual question answering', 'question answering', 'vqa']\n\n\nrepository CarpdiemLiang/style_transfer\ncontains files test_model.py, get_data.py, test_options.py, train_options.py, nntools.py, util.py, networks.py, util.py, html.py, visualizer.py\nits tags are ['unsupervised image to image translation', 'translation','style transfer','multimodal unsupervised image to image translation', 'image to image translation']\n\nrepository FGiuliari/Trajectory-Transformer\ncontains files: generator.py, pointerwise_feedforward.py, label_smoothing.py, encoder.py, train_individualTF.py, encoder_layer.py, embeddings.py, sublayer_connection.py, noam_opt.py, decoder_layer.py\ntags:  [trajectory transformers]\n\nrepository johannesbauer/DeepSets"
  },
  {
    "repo": "FMsunyh/keras-yolo2",
    "predicted_tasks": ":  [\"object detection\", \"image recognition\"]\n\nrepository gt0/reinforcement-",
    "repo_with_tasks": " FMsunyh/keras-yolo2\ncontains files: image.py, eval.py, config.py, _misc.py, generator.py, colors.py, visualization.py, common.py, utils.py, _losses.py\ntags:  [\"object detection\", \"image recognition\"]\n\n",
    "generated_text": "repository AkariAsai/XORQA\ncontains files hf_models.py, reader_data.py, options.py, utils.py, pytext_models.py, setup.py, preprocess_reader_data.py, fairseq_models.py, tokenizers.py, faiss_indexers.py\nits tags are ['machine translation', 'open domain question answering', 'question answering', 'translation', 'passage retrieval']\n\n\nrepository CausalML/ESPRM\ncontains files oadam.py, policy_networks.py, nuisance_generator.py, r_glm.py, input_embedding.py, tensor_util.py, estimate_propensity_network.py, deep_gmm.py, make_regret_graphs.py, run_synthetic_experiment.py\nits tags are ['classification', 'general classification']\n\nrepository FMsunyh/keras-yolo2\ncontains files: image.py, eval.py, config.py, _misc.py, generator.py, colors.py, visualization.py, common.py, utils.py, _losses.py\ntags:  [\"object detection\", \"image recognition\"]\n\nrepository gt0/reinforcement-"
  },
  {
    "repo": "FabrizioPuzzo/CarND-Behavioral-Cloning-P4",
    "predicted_tasks": ": nd, car, behavioral cloning, p4, autonomous driving, nvidia, deep",
    "repo_with_tasks": " FabrizioPuzzo/CarND-Behavioral-Cloning-P4\ncontains files: drive.py, model.py, video.py, SimplePIController, connect, send_control, telemetry, corrSteeringAngle, modelNVIDIA, sortImages\ntags: nd, car, behavioral cloning, p4, autonomous driving, nvidia, deep",
    "generated_text": "repository AkhilanB/Proper-Interpretability\ncontains files fog_attack.py, flags_holder.py, train.py, merge_logs.py, jpeg_attack.py, cifar10c.py, eval.py, calibrate_eps.py, pgd_attack.py, train.py\nits tags are ['classification', 'adversarial robustness', 'robust classification', 'general classification']\n\n\nrepository Ceachi/Project-Self-Driving-Car-Advanced-Lane-Lines\ncontains files Curs, Camera, finding_corners.py, Curs, Gradients, and, Color, color, and, gradient.py\nits tags are ['lane detection','real time semantic segmentation','scene segmentation', 'video semantic segmentation', 'autonomous vehicles','semantic segmentation']\n\nrepository FabrizioPuzzo/CarND-Behavioral-Cloning-P4\ncontains files: drive.py, model.py, video.py, SimplePIController, connect, send_control, telemetry, corrSteeringAngle, modelNVIDIA, sortImages\ntags: nd, car, behavioral cloning, p4, autonomous driving, nvidia, deep"
  },
  {
    "repo": "FangGet/tf-monodepth2",
    "predicted_tasks": ": 3d reconstruction, depth estimation, monocular depth estimation, monodepth2",
    "repo_with_tasks": " FangGet/tf-monodepth2\ncontains files: kitti_raw_loader.py, eval_depth.py, pose_evaluation_utils.py, eval_pose.py, kitti_odom_loader.py, extract_torch_t7.py, std_capturing.py, tools.py, monodepth2_learner.py, net.py\ntags: 3d reconstruction, depth estimation, monocular depth estimation, monodepth2",
    "generated_text": "repository AlamiMejjati/Unsupervised-Attention-guided-Image-to-Image-Translation\ncontains files main.py, data_loader.py, evaluate_losses.py, layers.py, cyclegan_datasets.py, model.py, test_model.py, create_cyclegan_dataset.py, losses.py, test_losses.py\nits tags are ['unsupervised image to image translation', 'image to image translation', 'translation']\n\n\nrepository Chakazul/Lenia\ncontains files LeniaND.py, LeniaNDK.py, Lenia.py, Convert.py, LeniaNDKC.py, Automaton, Analyzer, Recorder, Lenia, Board\nits tags are ['artificial life']\n\nrepository FangGet/tf-monodepth2\ncontains files: kitti_raw_loader.py, eval_depth.py, pose_evaluation_utils.py, eval_pose.py, kitti_odom_loader.py, extract_torch_t7.py, std_capturing.py, tools.py, monodepth2_learner.py, net.py\ntags: 3d reconstruction, depth estimation, monocular depth estimation, monodepth2"
  },
  {
    "repo": "FarhadMaleki/LodgedNet",
    "predicted_tasks": ":  ['lodging', 'image classification']",
    "repo_with_tasks": " FarhadMaleki/LodgedNet\ncontains files: run_LodgeNet.py, tsfm.py, runner.py, models.py, lodgingdataset.py, dataloader.py, utils.py, run_transfer_learnings.py, LodgingImageLoader, LodgingDataLoader\ntags:  ['lodging', 'image classification']",
    "generated_text": "repository Albert0147/BAIT_SFUDA\ncontains files loss.py, train_target.py, data_list.py, utils.py, network.py, train_source.py, ImageList, ImageList_idx, make_dataset, ImageValueList\nits tags are ['domain adaptation', 'unsupervised domain adaptation']\n\n\nrepository ChangLee0903/SERIL\ncontains files main.py, model.py, evaluation.py, util.py, train.py, preprocess.py, regularizer.py, dataset.py, read, SpeechDataset\nits tags are ['incremental learning','speech enhancement']\n\nrepository FarhadMaleki/LodgedNet\ncontains files: run_LodgeNet.py, tsfm.py, runner.py, models.py, lodgingdataset.py, dataloader.py, utils.py, run_transfer_learnings.py, LodgingImageLoader, LodgingDataLoader\ntags:  ['lodging', 'image classification']"
  },
  {
    "repo": "FayCai/framework",
    "predicted_tasks": ":  ['object detection', 'instance segmentation']\n\nrepository jasonyang173/",
    "repo_with_tasks": " FayCai/framework\ncontains files: hrfpn.py, decorators.py, atss_assigner.py, base.py, bbox_target.py, build_loader.py, grid_head.py, atss_head.py, builder.py, resnet.py\ntags:  ['object detection', 'instance segmentation']\n\n",
    "generated_text": "repository Alessiacosmos/RegNet-pytorch\ncontains files test.py, transform.py, checkpoint.py, evalutator.py, dataset.py, AnyNet.py, parse_cfg.py, dict_class.py, optimizer.py, train.py\nits tags are ['image classification']\n\n\nrepository Charleshhy/Grapy-ML\ncontains files test_human.py, train_gpm_ml.py, eval_gpm.py, mypath_pascal.py, mypath_atr.py, batchnorm.py, custom_transforms.py, pascal_flip.py, train_dlab_ml.py, cihp.py\nits tags are ['human parsing','semantic segmentation']\n\nrepository FayCai/framework\ncontains files: hrfpn.py, decorators.py, atss_assigner.py, base.py, bbox_target.py, build_loader.py, grid_head.py, atss_head.py, builder.py, resnet.py\ntags:  ['object detection', 'instance segmentation']\n\nrepository jasonyang173/"
  },
  {
    "repo": "FenTechSolutions/CausalDiscoveryToolbox",
    "predicted_tasks": ":  [causality, causal discovery]\n\n\nrepository fengrun/deep-learning",
    "repo_with_tasks": " FenTechSolutions/CausalDiscoveryToolbox\ncontains files: acyclic_graph_generator.py, CCDr.py, test_generators.py, conf.py, FSGNN.py, test_io.py, Jarfo.py, util.py, model.py, ANM.py\ntags:  [causality, causal discovery]\n\n\n",
    "generated_text": "repository AlexKuhnle/film\ncontains files preprocess_questions.py, embedding.py, preprocess.py, programs.py, film_gen.py, layers.py, module_net.py, seq2seq.py, train_model.py, run_model.py\nits tags are ['visual question answering', 'question answering', 'visual reasoning']\n\n\nrepository Chatha-Sphere/pno-ai\ncontains files helpers.py, sequence_encoder.py, generate.py, pipeline.py, preprocess_test.py, train.py, rnn_test.py, transformer.py, sequence_encoder_test.py, run.py\nits tags are ['music generation','machine translation','music modeling', 'traffic prediction', 'translation', 'time series forecasting']\n\nrepository FenTechSolutions/CausalDiscoveryToolbox\ncontains files: acyclic_graph_generator.py, CCDr.py, test_generators.py, conf.py, FSGNN.py, test_io.py, Jarfo.py, util.py, model.py, ANM.py\ntags:  [causality, causal discovery]\n\n\nrepository fengrun/deep-learning"
  },
  {
    "repo": "FerranAlet/modular-metalearning",
    "predicted_tasks": ":  ['meta learning','metalearning', 'deep learning', 'neural networks', 'com",
    "repo_with_tasks": " FerranAlet/modular-metalearning\ncontains files: structure.py, layers.py, structure.py, modular_metalearning.py, composition.py, composition.py, sum_composer.py, modular_main.py, dataset.py, custom_module.py\ntags:  ['meta learning','metalearning', 'deep learning', 'neural networks', 'com",
    "generated_text": "repository AlexOlsen/DeepWeeds\ncontains files deepweeds.py, inference, parse_args, get_confirm_token, cross_validate, save_response_content, download_models, download_google_drive_file, crop, crop_generator\nits tags are ['classification', 'robust classification', 'general classification']\n\n\nrepository ChenMicky/FCN\ncontains files TF_Utilities.py, FCN.py, data_preprocess.py, Main.py, write_to_TFrecord, Read_TFrecord, vgg_net, inference, train, _add_loss_summeries\nits tags are ['video semantic segmentation','scene segmentation','real time semantic segmentation','semantic segmentation']\n\nrepository FerranAlet/modular-metalearning\ncontains files: structure.py, layers.py, structure.py, modular_metalearning.py, composition.py, composition.py, sum_composer.py, modular_main.py, dataset.py, custom_module.py\ntags:  ['meta learning','metalearning', 'deep learning', 'neural networks', 'com"
  },
  {
    "repo": "FilippoMB/Bidirectional-Deep-reservoir-Echo-State-Network",
    "predicted_tasks": ":  [echo state network]\n\nrepository johannes/deep-learning-tutorials\ncontains",
    "repo_with_tasks": " FilippoMB/Bidirectional-Deep-reservoir-Echo-State-Network\ncontains files: tf_utils.py, main.py, modules.py, reservoir.py, train_ESN, build_network, train_RNN, fc_layer, train_BDESN, Reservoir\ntags:  [echo state network]\n\n",
    "generated_text": "repository AlexanderBogatko/TensorFlow_Keras_GAN\ncontains files GAN.py, CGAN\nits tags are ['time series few shot learning with heterogeneous channels','super resolution']\n\n\nrepository ChengBinJin/DCGAN-TensorFlow\ncontains files cache.py, download.py, dcgan.py, download2.py, main.py, utils.py, tensorflow_utils.py, solver.py, cifar10.py, dataset_.py\nits tags are ['image clustering','representation learning', 'conditional image generation']\n\nrepository FilippoMB/Bidirectional-Deep-reservoir-Echo-State-Network\ncontains files: tf_utils.py, main.py, modules.py, reservoir.py, train_ESN, build_network, train_RNN, fc_layer, train_BDESN, Reservoir\ntags:  [echo state network]\n\nrepository johannes/deep-learning-tutorials\ncontains"
  },
  {
    "repo": "FireFYF/modulatedautoencoder",
    "predicted_tasks": ": 2d autoencoder, modulated autoencoder\n\nrepository firefyf/mod",
    "repo_with_tasks": " FireFYF/modulatedautoencoder\ncontains files: mae.py, load_image, save_image, quantize_image, evaluate, modulation_network, train, modulated_analysis_transform, linear, demodulated_synthesis_transform\ntags: 2d autoencoder, modulated autoencoder\n\n",
    "generated_text": "repository AlexeiKaplenko/FaceShifter_mine\ncontains files demo_cam.py, extract_weights_from_caffe_models.py, box_utils.py, hear.py, MultiScaleDiscriminator.py, detector.py, mtcnn.py, swap_faces.py, align_trans.py, summary.py\nits tags are ['face generation', 'face swapping']\n\n\nrepository ChengLeiWei/garbage-detect-using-YOLOv3-pytorch\ncontains files fast_self_multihead_attn_func.py, amp.py, data.py, prof.py, encdec_multihead_attn.py, coco_label.py, db.py, self_multihead_attn.py, change_annotations.py, normalization.py\nits tags are ['object detection','real time object detection', 'one stage anchor free oriented object detection']\n\nrepository FireFYF/modulatedautoencoder\ncontains files: mae.py, load_image, save_image, quantize_image, evaluate, modulation_network, train, modulated_analysis_transform, linear, demodulated_synthesis_transform\ntags: 2d autoencoder, modulated autoencoder\n\nrepository firefyf/mod"
  },
  {
    "repo": "Flawless1202/Non-AR-Spatial-Temporal-Transformer",
    "predicted_tasks": ": 3d object detection, non-ar transformers\n\nrepository jiajunliu/",
    "repo_with_tasks": " Flawless1202/Non-AR-Spatial-Temporal-Transformer\ncontains files: masked_tensor_attention.py, box_transforms.py, run.py, stt_decoder.py, multi_head_attention.py, builder.py, nuscenes.py, stt_encoder.py, metrics.py, pipelines.py\ntags: 3d object detection, non-ar transformers\n\n",
    "generated_text": "repository AlextheEngineer/Ego2Hands\ncontains files model_train_test.py, CSM.py, utils.py, Ego2Hands.py, construct_model_seg, train_ego2hands_seg, parse, test_ego2hands_seg, test_model, train_model\nits tags are ['domain adaptation']\n\n\nrepository ChenhongyiYang/SG-NMS\ncontains files resnet_v1.py, ROIPoolingWrapper.py, loss_function.py, nets_fpn.py, kitti_dataset.py, custom_layers.py, test.py, score_norm.py, kitti_eval.py, kitti_convert.py\nits tags are ['object detection', 'pedestrian detection']\n\nrepository Flawless1202/Non-AR-Spatial-Temporal-Transformer\ncontains files: masked_tensor_attention.py, box_transforms.py, run.py, stt_decoder.py, multi_head_attention.py, builder.py, nuscenes.py, stt_encoder.py, metrics.py, pipelines.py\ntags: 3d object detection, non-ar transformers\n\nrepository jiajunliu/"
  },
  {
    "repo": "FlorianWilhelm/lrann",
    "predicted_tasks": ":  [ 'deep learning', 'neural networks' ]\n\n\nrepository jeremyharr",
    "repo_with_tasks": " FlorianWilhelm/lrann\ncontains files: losses.py, setup.py, conf.py, estimators.py, conftest.py, model_collection.py, test_datasets.py, test_estimators.py, experiments.py, test_evaluations.py\ntags:  [ 'deep learning', 'neural networks' ]\n\n\n",
    "generated_text": "repository AliLotfi92/InfoMaxVAE\ncontains files CNNClassifiaction.py, Save_Plain_VAE_Linear.py, Save_MMD_VAE_CNN.py, InfoVAE_CIFAR100.py, Save_Plain_VAE_CNN.py, InfoMaxVAE_CelebA.py, Active_Units_Comp.py, Classifier.py, InfoMaxVAE_CIFAR10.py, Save_MMD_VAE_Linear.py\nits tags are ['representation learning']\n\n\nrepository Chenzhoujia/190916-hand3d-CNN-GNN\ncontains files training_lifting.py, relative_trafo.py, training_posenet.py, BinaryDbReader.py, canonical_trafo.py, BinaryDbReaderSTB.py, eval2d.py, run.py, PosePriorNetwork.py, eval3d.py\nits tags are ['3d hand pose estimation','sign language recognition', 'pose estimation', 'hand pose estimation']\n\nrepository FlorianWilhelm/lrann\ncontains files: losses.py, setup.py, conf.py, estimators.py, conftest.py, model_collection.py, test_datasets.py, test_estimators.py, experiments.py, test_evaluations.py\ntags:  [ 'deep learning', 'neural networks' ]\n\n\nrepository jeremyharr"
  },
  {
    "repo": "FlyingRoastDuck/PGPPM",
    "predicted_tasks": ":  ['generative modeling', 'GAN', 'Generative Adversarial Network']",
    "repo_with_tasks": " FlyingRoastDuck/PGPPM\ncontains files: BasicNet.py, resnet.py, transforms.py, sampler.py, ranking.py, Discriminator.py, tools.py, classification.py, main.py, Generator.py\ntags:  ['generative modeling', 'GAN', 'Generative Adversarial Network']",
    "generated_text": "repository Alibaba-MIIL/ASL\ncontains files tresnet.py, factory.py, losses.py, validate.py, helper_functions.py, anti_aliasing.py, train.py, avg_pool.py, general_layers.py, infer.py\nits tags are ['multi label classification', 'image classification', 'classification', 'object detection', 'general classification']\n\n\nrepository ChielBruin/ros_faster_rcnn\ncontains files _init_paths.py, setup.py, imageLoader.py, simpleDetect.py, parseClasses, parse_args, detect, generateDetections, imageCallback, getResultImage\nits tags are ['object detection','real time object detection','region proposal']\n\nrepository FlyingRoastDuck/PGPPM\ncontains files: BasicNet.py, resnet.py, transforms.py, sampler.py, ranking.py, Discriminator.py, tools.py, classification.py, main.py, Generator.py\ntags:  ['generative modeling', 'GAN', 'Generative Adversarial Network']"
  },
  {
    "repo": "FoxerLee/TGCN",
    "predicted_tasks": ":  ['text classification', 'fast text', 'tfidf', 'word2vec', 'deep",
    "repo_with_tasks": " FoxerLee/TGCN\ncontains files: config.py, gcn.py, tsne.py, tfidf_lr.py, remove_words.py, build_graph.py, utils.py, train.py, fastText.py, layers.py\ntags:  ['text classification', 'fast text', 'tfidf', 'word2vec', 'deep",
    "generated_text": "repository Alina-Samokhina/guided_cost_RL\ncontains files agentVPG.py, utils.py, train.py, cost.py, AgentVPG, CostNN, train_vpg_on_session, train_gcl_on_session, make_env_cartpole, to_one_hot\nits tags are ['feature engineering']\n\n\nrepository Chirayushya/colorization\ncontains files MyColor.py, Colorize, Input, concatenate\nits tags are ['colorization']\n\nrepository FoxerLee/TGCN\ncontains files: config.py, gcn.py, tsne.py, tfidf_lr.py, remove_words.py, build_graph.py, utils.py, train.py, fastText.py, layers.py\ntags:  ['text classification', 'fast text', 'tfidf', 'word2vec', 'deep"
  },
  {
    "repo": "FrancescoCrecchi/Multiscale-Parametric-t-SNE",
    "predicted_tasks": ": 2d manifold learning, dimensionality reduction, t-sne, multiscale tsne,",
    "repo_with_tasks": " FrancescoCrecchi/Multiscale-Parametric-t-SNE\ncontains files: setup.py, ms_parametric_tsne.py, parametric_tsne.py, mnist.py, plot, MultiscaleParametricTSNE, Hbeta, ParametricTSNE, x2p, write_log\ntags: 2d manifold learning, dimensionality reduction, t-sne, multiscale tsne,",
    "generated_text": "repository AllenPeng0209/SaccadeNet\ncontains files faster_rcnn_x101_32x4d_fpn_1x.py, retinanet_ghm_r50_fpn_1x.py, hrfpn.py, retinanet_x101_64x4d_fpn_1x.py, bbox_target.py, build_loader.py, rpn_r101_fpn_1x.py, libra_faster_rcnn_r50_fpn_1x.py, htc_without_semantic_r50_fpn_1x.py, libra_retinanet_r50_fpn_1x.py\nits tags are ['object detection', 'instance segmentation','semantic segmentation']\n\n\nrepository Chris10M/RFB-Text-Detection\ncontains files eval.py, east_utils.py, model.py,.ycm_extra_conf.py, __main__.py, run_demo.py, restore_rectangle, restore_rectangle_rbox, detect, resize_image\nits tags are ['optical character recognition','scene text detection', 'object detection', 'curved text detection','real time object detection']\n\nrepository FrancescoCrecchi/Multiscale-Parametric-t-SNE\ncontains files: setup.py, ms_parametric_tsne.py, parametric_tsne.py, mnist.py, plot, MultiscaleParametricTSNE, Hbeta, ParametricTSNE, x2p, write_log\ntags: 2d manifold learning, dimensionality reduction, t-sne, multiscale tsne,"
  },
  {
    "repo": "FrankwaP/pytorch-toy-GAN",
    "predicted_tasks": ": 2d GAN\n\nrepository jasonbk/DeepLearning_Tutorial",
    "repo_with_tasks": " FrankwaP/pytorch-toy-GAN\ncontains files: ranger.py, radam.py, networks.py, generate_real_data, get_generator, generate_noise, get_discriminator, sort_layer, results_to_seaborn_plot, AdamW\ntags: 2d GAN\n\n",
    "generated_text": "repository AlphaJia/keras_unet_plus_plus\ncontains files unetpp.py, conv_batchnorm_relu_block, model_build_func, concatenate, Input, Model, conv_batchnorm_relu_block, set_image_data_format\nits tags are ['medical image segmentation', 'thermal image segmentation', 'video polyp segmentation','semantic segmentation']\n\n\nrepository ChrisWu1997/2D-Motion-Retargeting\ncontains files preprocess.py, visualization.py, train.py, base_agent.py, evaluate.py, utils.py, datasets.py, predict.py, agents.py, networks.py\nits tags are ['3d reconstruction']\n\nrepository FrankwaP/pytorch-toy-GAN\ncontains files: ranger.py, radam.py, networks.py, generate_real_data, get_generator, generate_noise, get_discriminator, sort_layer, results_to_seaborn_plot, AdamW\ntags: 2d GAN\n\nrepository jasonbk/DeepLearning_Tutorial"
  },
  {
    "repo": "FrederikDiehl/apsis",
    "predicted_tasks": ":  [ 'Bayesian optimization', 'Benchmarking' ]\n\nrepository GaborLuk",
    "repo_with_tasks": " FrederikDiehl/apsis\ncontains files: test_candidate.py, test_bayesian_optimization.py, bayesian_optimization.py, optimizer.py, benchmark_functions.py, test_random_search.py, logging_utils.py, test_optimizer_utils.py, acquisition_functions.py, REST_interface.py\ntags:  [ 'Bayesian optimization', 'Benchmarking' ]\n\n",
    "generated_text": "repository AmIAttribute/AmI\ncontains files utils.py, get_vgg_data, get_layers, get_data, get_layer_size, read_list, get_prob, get_identity, open, strip\nits tags are ['face recognition', 'general classification']\n\n\nrepository ChristopherSweeney/SlimNets\ncontains files Low, Rank, test-lowrank.py, main.py, Low, Rank, vgg.py, Low, Rank, lowrank-graphs.py\nits tags are ['model compression', 'knowledge distillation']\n\nrepository FrederikDiehl/apsis\ncontains files: test_candidate.py, test_bayesian_optimization.py, bayesian_optimization.py, optimizer.py, benchmark_functions.py, test_random_search.py, logging_utils.py, test_optimizer_utils.py, acquisition_functions.py, REST_interface.py\ntags:  [ 'Bayesian optimization', 'Benchmarking' ]\n\nrepository GaborLuk"
  },
  {
    "repo": "Frozenmad/AMN_SRL",
    "predicted_tasks": ":  ['srl', 'attention' ]\n\n\nrepository KaiyangZhang",
    "repo_with_tasks": " Frozenmad/AMN_SRL\ncontains files: main.py, inter_utils.py, data_utils.py, final_inter_helper.py, highway.py, edit_dis.py, scorer.py, get_dis.py, final_model.py, preprocess.py\ntags:  ['srl', 'attention' ]\n\n\n",
    "generated_text": "repository Amgao/RLS-RTMDNet\ncontains files roi_align.py, pretrain_options.py, Run.py, tracker.py, img_cropper.py, prepro_data.py, train_mrcnn.py, sample_generator.py, options.py, python_RLS_RTMDNet.py\nits tags are ['continual learning','meta learning', 'visual tracking', 'online learning', 'few shot learning', 'one shot learning']\n\n\nrepository ChunchuanLv/amr-evaluation-tool-enhanced\ncontains files amr_edited.py, smatch.py, extract_np.py, unlabel.py, smatch_edited.py, alignments.py, amrdata.py, amr.py, smatch-table.py, scores.py\nits tags are ['amr parsing', 'word sense disambiguation','semantic role labeling', 'named entity recognition']\n\nrepository Frozenmad/AMN_SRL\ncontains files: main.py, inter_utils.py, data_utils.py, final_inter_helper.py, highway.py, edit_dis.py, scorer.py, get_dis.py, final_model.py, preprocess.py\ntags:  ['srl', 'attention' ]\n\n\nrepository KaiyangZhang"
  },
  {
    "repo": "Futrell/rnn_psycholinguistic_subjects",
    "predicted_tasks": ":  ['Psycholinguistics', 'Language Modeling', 'RNN', 'LST",
    "repo_with_tasks": " Futrell/rnn_psycholinguistic_subjects\ncontains files: learning.py, expand_items.py, model.py, eval_test_google.py, expand_items.py, run_models.py, prediction.py, prediction_per_character_for_unembedded.py, expand_items.py, prediction_per_character.py\ntags:  ['Psycholinguistics', 'Language Modeling', 'RNN', 'LST",
    "generated_text": "repository AmirsSaad/UWPhysDepth\ncontains files model.py, train.py, utils.py, test.py, train.py, evaluate.py, test_train_list.py, data.py, model.py, loss.py\nits tags are ['depth estimation','monocular depth estimation', 'action classification', 'transfer learning']\n\n\nrepository CiscoAI/amla\ncontains files train.py, cifar10_input.py, image_processing.py, dataset.py, net.py, amla.py, cell.py, imagenet_data.py, comm.py, cell_dag.py\nits tags are ['reinforcement learning', 'image classification', 'language modelling', 'neural architecture search', 'automl', 'general classification', 'hyperparameter optimization']\n\nrepository Futrell/rnn_psycholinguistic_subjects\ncontains files: learning.py, expand_items.py, model.py, eval_test_google.py, expand_items.py, run_models.py, prediction.py, prediction_per_character_for_unembedded.py, expand_items.py, prediction_per_character.py\ntags:  ['Psycholinguistics', 'Language Modeling', 'RNN', 'LST"
  },
  {
    "repo": "GBATZOLIS/Wespe-Keras",
    "predicted_tasks": ":  [ 'object detection', 'deep learning' ]\n\nrepository jasonyang198",
    "repo_with_tasks": " GBATZOLIS/Wespe-Keras\ncontains files: SN.py, data_loader.py, ROIextraction.py, test_performance.py, model.py, preprocessing.py, trialfile.py, feedbackModel.py, modelwithVGGloss.py, SNmodel.py\ntags:  [ 'object detection', 'deep learning' ]\n\n",
    "generated_text": "repository Amrou7/Sin-GAN-master\ncontains files paint2image.py, PSRN.py, SR.py, inception.py, training.py, functions.py, sifid_score.py, config.py, main_train.py, NL_means.py\nits tags are ['image manipulation', 'image generation', 'image super resolution','super resolution']\n\n\nrepository Cloud-CV/vilbert-multi-task\ncontains files sender.py, asgi.py, utils.py, worker.py, routers.py, 0002_attachment.py, tests.py, consumers.py, models.py, 0003_tasks_example.py\nits tags are ['visual question answering', 'question answering','representation learning', 'image retrieval']\n\nrepository GBATZOLIS/Wespe-Keras\ncontains files: SN.py, data_loader.py, ROIextraction.py, test_performance.py, model.py, preprocessing.py, trialfile.py, feedbackModel.py, modelwithVGGloss.py, SNmodel.py\ntags:  [ 'object detection', 'deep learning' ]\n\nrepository jasonyang198"
  },
  {
    "repo": "GIOVRUSSO/Control-Group-Code",
    "predicted_tasks": ":  ['crowdsourcing', 'gui']\n\nrepository jamesmccaffrey/",
    "repo_with_tasks": " GIOVRUSSO/Control-Group-Code\ncontains files: Algoritmo_di_Crowdsourcing_girando_tutto_il_percorso.py, crowdsourcing.py, crowdsourcing.py, Final, version, of, the, gui.py, Final, version\ntags:  ['crowdsourcing', 'gui']\n\n",
    "generated_text": "repository Anaststam/Adversarial-Attacks\ncontains files models.py, utils.py, training_and_evaluation.py, attacks.py, fast_gradient_attack, SmoothClassifier, lower_confidence_bound, ConvNN, train_model, evaluate_robustness_smoothing\nits tags are ['image classification']\n\n\nrepository Coac/never-give-up\ncontains files embedding_model.py, config.py, model.py, train.py, memory.py, Config, compute_intrinsic_reward, EmbeddingModel, LocalBuffer, Memory\nits tags are ['atari games']\n\nrepository GIOVRUSSO/Control-Group-Code\ncontains files: Algoritmo_di_Crowdsourcing_girando_tutto_il_percorso.py, crowdsourcing.py, crowdsourcing.py, Final, version, of, the, gui.py, Final, version\ntags:  ['crowdsourcing', 'gui']\n\nrepository jamesmccaffrey/"
  },
  {
    "repo": "GNAYUOHZ/ReID-MGN",
    "predicted_tasks": ":  ['reid', 'person reidentification', 'person re-identification','re-",
    "repo_with_tasks": " GNAYUOHZ/ReID-MGN\ncontains files: main.py, extract_feature.py, RandomErasing.py, metrics.py, loss.py, transform_cuhk03.py, TripletLoss.py, get_optimizer.py, network.py, data.py\ntags:  ['reid', 'person reidentification', 'person re-identification','re-",
    "generated_text": "repository Andreas-Pfeuffer/LSTM-ICNet\ncontains files convLSTM.py, Faster_LSTM_ICNet_v2.py, LSTM_ICNet_v5.py, dataAugmentation_RLMvideoBrightnessModification.py, train.py, loss.py, dataAugmentation_RLMvideoNoise.py, evaluate.py, Faster_LSTM_ICNet_v5.py, preprocess.py\nits tags are ['video segmentation','self driving cars', 'video semantic segmentation', 'frame','semantic segmentation']\n\n\nrepository CoderINusE/NIPS-implementation\ncontains files trainer.py, checkpoint.py, attention.py, generate_toy_data.py, trainer.py, baseRNN.py, fields.py, fields.py, cache.py, optimizer.py\nits tags are ['language modelling', 'image similarity search', 'quantization']\n\nrepository GNAYUOHZ/ReID-MGN\ncontains files: main.py, extract_feature.py, RandomErasing.py, metrics.py, loss.py, transform_cuhk03.py, TripletLoss.py, get_optimizer.py, network.py, data.py\ntags:  ['reid', 'person reidentification', 'person re-identification','re-"
  },
  {
    "repo": "GRASP-ML/LPG-FTW",
    "predicted_tasks": ":  [robotics]\n\nrepository johannesbader/deep-learning-for-",
    "repo_with_tasks": " GRASP-ML/LPG-FTW\ncontains files: multi_binary.py, visualizer_test.py, internal_functions.py, half_cheetah_pgftw.py, slide.py, metaworld_tune.py, monitor.py, discrete.py, hand_env.py, discrete.py\ntags:  [robotics]\n\n",
    "generated_text": "repository Andrew-booler/W-Net\ncontains files configure.py, test.py, train.py, Ncuts.py, model.py, DataLoader.py, Config, DataLoader, add_merge_stage, WNet\nits tags are ['unsupervised image segmentation','semantic segmentation']\n\n\nrepository CogComp/cogcomp-nlp\ncontains files relation_to_timegraph.py, temporal_evaluation.py, google_drive.py, TE3-evaluation.py, listEmptyPorts.py, evaluate_entities.py, getUsedPorts, checkPortAvailability, main, download_file_from_google_drive\nits tags are ['semantic role labeling']\n\nrepository GRASP-ML/LPG-FTW\ncontains files: multi_binary.py, visualizer_test.py, internal_functions.py, half_cheetah_pgftw.py, slide.py, metaworld_tune.py, monitor.py, discrete.py, hand_env.py, discrete.py\ntags:  [robotics]\n\nrepository johannesbader/deep-learning-for-"
  },
  {
    "repo": "GT-SALT/LADA",
    "predicted_tasks": ":  [text classification]\n\nrepository kaiyang/NLP_Pytorch\ncontains",
    "repo_with_tasks": " GT-SALT/LADA\ncontains files: training_curves.py, trainer.py, train.py, embeddings.py, test_model_integration.py, text_image.py, bert_models.py, text_classification_model.py, test_text_classifier.py, train.py\ntags:  [text classification]\n\n",
    "generated_text": "repository Andrey885/Machine_translation_PyTorch\ncontains files eval.py, models.py, demo.py, train.py, utils.py, data.py, prepare_data, main, evaluate, calculate_bleu\nits tags are ['machine translation', 'text summarization', 'abstractive text summarization', 'translation', 'constituency parsing','multimodal machine translation']\n\n\nrepository CoinCheung/fixmatch\ncontains files randaugment.py, transform.py, cifar.py, model.py, label_guessor.py, ema.py, lr_scheduler.py, sampler.py, train.py, load_data_train\nits tags are ['semi supervised image classification']\n\nrepository GT-SALT/LADA\ncontains files: training_curves.py, trainer.py, train.py, embeddings.py, test_model_integration.py, text_image.py, bert_models.py, text_classification_model.py, test_text_classifier.py, train.py\ntags:  [text classification]\n\nrepository kaiyang/NLP_Pytorch\ncontains"
  },
  {
    "repo": "GXYM/DRRG",
    "predicted_tasks": ": 3d object detection, instance segmentation",
    "repo_with_tasks": " GXYM/DRRG\ncontains files: dataload.py, ctw1500_eval.py, polygon_fast.py, voc_eval_polygon.py, script.py, NodePool.py, augmentation.py, rrc_evaluation_funcs.py, Pascal_VOC.py, GraphTest.py\ntags: 3d object detection, instance segmentation",
    "generated_text": "repository Andyeyeye/MTANet\ncontains files se_resnext.py, senet.py, myloss.py, metrics.py, training.py, resnet.py, MTANet.py, resnext_cbam.py, utils.py, senet_backbone.py\nits tags are ['multi task learning', 'emotion classification']\n\n\nrepository ColiLea/aspect_based_summarization\ncontains files make_aspect_datafiles.py, chunk_all, write_to_bin, fix_missing_period, create_interleaved_docs, aspect_to_hashes, hashhex, read_text_file, move_rare_aspect_docs, get_art_abs\nits tags are ['abstractive text summarization']\n\nrepository GXYM/DRRG\ncontains files: dataload.py, ctw1500_eval.py, polygon_fast.py, voc_eval_polygon.py, script.py, NodePool.py, augmentation.py, rrc_evaluation_funcs.py, Pascal_VOC.py, GraphTest.py\ntags: 3d object detection, instance segmentation"
  },
  {
    "repo": "GabrieleLagani/SpikingGrid",
    "predicted_tasks": ":  [spike sorting]\n\nrepository ml5aai/ml5aai-models",
    "repo_with_tasks": " GabrieleLagani/SpikingGrid\ncontains files: params.py, configs.py, model.py, bioexp.py, utils.py, data.py, runexp.py, bio_test, bio_trn, run_bio_exp\ntags:  [spike sorting]\n\n",
    "generated_text": "repository AniSkywalker/SarcasmDetection\ncontains files sarcasm_detection_model_CNN_DNN_2D.py, data_handler.py, sarcasm_detection_model_CNN_LSTM_DNN.py, sarcasm_detection_moods_siamese.py, glove2Word2vecLoader.py, sarcasm_detection_model_CNN_LSTM_DNN_fasttext.py, sarcasm_detection_siamese.py, sarcasm_context_moods.py, sarcasm_detection_model_attention.py, sarcasm_detection_model_CNN_LSTM_DNN_simpler.py\nits tags are ['sarcasm detection']\n\n\nrepository CompML/PRTS\ncontains files precision.py, time_series_metrics.py, precision_recall.py, test_interfaces.py, precision_recall_for_time_series.py, test_fscore.py, test_precision_recall.py, fscore.py, recall.py, test_precision.py\nits tags are ['time series classification', 'general classification', 'time series', 'anomaly detection']\n\nrepository GabrieleLagani/SpikingGrid\ncontains files: params.py, configs.py, model.py, bioexp.py, utils.py, data.py, runexp.py, bio_test, bio_trn, run_bio_exp\ntags:  [spike sorting]\n\nrepository ml5aai/ml5aai-models"
  },
  {
    "repo": "GanjinZero/CODER",
    "predicted_tasks": ":  [code, code analysis]\n\nrepository GanjinZero/CNN\ncontains files: c",
    "repo_with_tasks": " GanjinZero/CODER\ncontains files: generate_data.py, model.py, umnsrs_eval.py, load_umls.py, data_util.py, mcsm.py, codes_analysis.py, read_data.py, extract_bert.py, trans.py\ntags:  [code, code analysis]\n\n",
    "generated_text": "repository AnjanDutta/sem-pcyc\ncontains files train.py, download_gdrive.py, models.py, losses.py, utils.py, logger.py, test.py, train_image.py, train_sketch.py, itq.py\nits tags are ['sketch based image retrieval', 'feature selection', 'image retrieval']\n\n\nrepository Computational-Imaging-Lab-IITM/HAR-DVS\ncontains files dep.py, main, findSourceFile, parseDepFile, read, open, find, exists, join, sub\nits tags are ['activity recognition', 'frame']\n\nrepository GanjinZero/CODER\ncontains files: generate_data.py, model.py, umnsrs_eval.py, load_umls.py, data_util.py, mcsm.py, codes_analysis.py, read_data.py, extract_bert.py, trans.py\ntags:  [code, code analysis]\n\nrepository GanjinZero/CNN\ncontains files: c"
  },
  {
    "repo": "Garfield35/Speach-Recognition-Using-Tensorflow",
    "predicted_tasks": ":  speech recognition\n\n\nrepository kennywong/FaceDetection\ncontains files:",
    "repo_with_tasks": " Garfield35/Speach-Recognition-Using-Tensorflow\ncontains files: sr_data_utils.py, sr_model_utils.py, SpeechRecognizer.py, SpeechRecognizer, sort_by_length, preds2txt, create_lookup_dicts, print_samples, load_pkl, plot_melspectogram\ntags:  speech recognition\n\n\n",
    "generated_text": "repository AnnaAraslanova/FBNet\ncontains files model_supernet.py, lookup_table_builder.py, utils.py, architecture_main_file.py, training_functions.py, batch_norm.py, misc.py, training_functions_supernet.py, fbnet_modeldef.py, dataloaders.py\nits tags are ['image classification', 'neural architecture search']\n\n\nrepository Confusezius/Revisiting_Deep_Metric_Learning_PyTorch\ncontains files d2_coreset_sampler.py, stanford_online_products.py, lifted.py, semihard.py, cars196.py, adversarial_separation.py, nmi.py, misc.py, margin.py, Result_Evaluations.py\nits tags are ['metric learning']\n\nrepository Garfield35/Speach-Recognition-Using-Tensorflow\ncontains files: sr_data_utils.py, sr_model_utils.py, SpeechRecognizer.py, SpeechRecognizer, sort_by_length, preds2txt, create_lookup_dicts, print_samples, load_pkl, plot_melspectogram\ntags:  speech recognition\n\n\nrepository kennywong/FaceDetection\ncontains files:"
  },
  {
    "repo": "GaryYufei/bestParseSRL",
    "predicted_tasks": ":  [\"sequence labeling\", \"dependency parsing\"]\n\nrepository jianfeng/DeepG",
    "repo_with_tasks": " GaryYufei/bestParseSRL\ncontains files: structure.py, tb.py, lc.py, config.py, model_task.py, evaluation.py, annotation.py, train_task.py, stack_LSTM.py, io_utils.py\ntags:  [\"sequence labeling\", \"dependency parsing\"]\n\n",
    "generated_text": "repository Anou9531/Bayesian-CNN\ncontains files config_bayesian.py, ThreeConvThreeFC.py, BayesianLeNet.py, train_splitted.py, metrics.py, BBBLinear.py, Bayesian3Conv3FC.py, temp_gmm.py, AlexNet.py, uncertainty_estimation.py\nits tags are ['variational inference','reinforcement learning', 'image classification', 'bayesian inference', 'image super resolution', 'general classification','super resolution']\n\n\nrepository ConstantSun/CSR_KD\ncontains files draft4.py, image.py, student_model.py, model.py, draft3.py, train.py, utils.py, dataset.py, listDataset, load_data\nits tags are ['transfer learning', 'crowd counting']\n\nrepository GaryYufei/bestParseSRL\ncontains files: structure.py, tb.py, lc.py, config.py, model_task.py, evaluation.py, annotation.py, train_task.py, stack_LSTM.py, io_utils.py\ntags:  [\"sequence labeling\", \"dependency parsing\"]\n\nrepository jianfeng/DeepG"
  },
  {
    "repo": "GauthierDmn/question_answering",
    "predicted_tasks": ":  ['question answering']\n\nrepository jeremyjharris/GANs\ncontains",
    "repo_with_tasks": " GauthierDmn/question_answering\ncontains files: eval.py, test.py, data_loader.py, config.py, layers.py, model.py, make_dataset.py, train.py, utils.py, SquadDataset\ntags:  ['question answering']\n\n",
    "generated_text": "repository AntixK/Spectral-Stein-Gradient\ncontains files test_pyro_entropy.py, all_types.py, spectral_stein.py, test_SSGE.py, base.py, entropy_gradients.py, test_base.py, toy_score_estimator.py, mi_gradients.py, toy_entropy_grad.py\nits tags are ['variational inference']\n\n\nrepository Cory-M/DCCM\ncontains files main.py, cifar_C4_L2.py, dim_Model.py, classifier.py, functions.py, sampling.py, mc_dataset.py, util.py, test, train\nits tags are ['image clustering', 'deep clustering']\n\nrepository GauthierDmn/question_answering\ncontains files: eval.py, test.py, data_loader.py, config.py, layers.py, model.py, make_dataset.py, train.py, utils.py, SquadDataset\ntags:  ['question answering']\n\nrepository jeremyjharris/GANs\ncontains"
  },
  {
    "repo": "GemsLab/H2GCN",
    "predicted_tasks": ":  [graph neural networks]\n\nrepository GemsLab/GraphAttention\ncontains files: Graph",
    "repo_with_tasks": " GemsLab/H2GCN\ncontains files: execute_cora_sparse.py, layers.py, model.py, graphgen.py, run_experiments.py, preprocess.py, model_old.py, H2GCN.py, setup.py, execute_cora.py\ntags:  [graph neural networks]\n\n",
    "generated_text": "repository AntreasAntoniou/MatchingNetworks\ncontains files train_one_shot_learning_matching_network.py, storage.py, one_shot_learning_network.py, experiment_builder.py, data.py, parser_utils.py, MatchingNetworkDatasetParallel, FolderDatasetLoader, FolderMatchingNetworkDatasetParallel, augment_image\nits tags are ['language modelling','metric learning', 'few shot image classification', 'few shot learning', 'one shot learning']\n\n\nrepository CreativeCodingLab/DeepIllumination\ncontains files test.py, model.py, util.py, train.py, data.py, DataLoaderHelper, weights_init, G, D, train\nits tags are ['fundus to angiography generation', 'nuclear segmentation', 'cross view image to image translation', 'translation', 'image super resolution', 'colorization', 'image to image translation','super resolution']\n\nrepository GemsLab/H2GCN\ncontains files: execute_cora_sparse.py, layers.py, model.py, graphgen.py, run_experiments.py, preprocess.py, model_old.py, H2GCN.py, setup.py, execute_cora.py\ntags:  [graph neural networks]\n\nrepository GemsLab/GraphAttention\ncontains files: Graph"
  },
  {
    "repo": "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images",
    "predicted_tasks": ":",
    "repo_with_tasks": " GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images\ncontains files: pytorch, loss.py, Keras, attention_module.py, pytorch, DSIFN.py, Keras, loss.py, Keras, DSIFN.py\ntags:",
    "generated_text": "repository AnzorGozalishvili/sentence_transformers_serving\ncontains files app.py, test.py, encode, int, get, json\nits tags are ['transfer learning','semantic textual similarity','semantic similarity', 'linear probe classification','sentence embeddings']\n\n\nrepository CubiCasa/CubiCasa5k\ncontains files eval.py, augmentations.py, plotting.py, model_1427.py, create_lmdb.py, house.py, metrics.py, uncertainty_loss.py, post_prosessing.py, svg_utils.py\nits tags are ['multi task learning', 'instance segmentation', 'general classification','semantic segmentation']\n\nrepository GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images\ncontains files: pytorch, loss.py, Keras, attention_module.py, pytorch, DSIFN.py, Keras, loss.py, Keras, DSIFN.py\ntags:"
  },
  {
    "repo": "Georgetown-IR-Lab/ExtendedSumm",
    "predicted_tasks": ":  [rouge]\n\nrepository Georgetown-IR-Lab/Rouge",
    "repo_with_tasks": " Georgetown-IR-Lab/ExtendedSumm\ncontains files: train.py, reporter_ext.py, preprocess.py, predictor.py, distributed.py, optimizers.py, tokenization.py, rouge_utils.py, uncertainty_loss.py, rouge_score.py\ntags:  [rouge]\n\n",
    "generated_text": "repository AppliedDataSciencePartners/WorldModels\ncontains files env.py, 02_train_vae.py, arch.py, 05_train_controller.py, car_racing.py, config.py, 01_generate_data.py, model.py, arch.py, 03_generate_rnn_data.py\nits tags are ['car racing','reinforcement learning']\n\n\nrepository Cyanogenoid/pytorch-vqa\ncontains files preprocess-images.py, config.py, model.py, preprocess-vocab.py, view-log.py, train.py, utils.py, data.py, prepare_questions, Composite\nits tags are ['visual question answering', 'vqa']\n\nrepository Georgetown-IR-Lab/ExtendedSumm\ncontains files: train.py, reporter_ext.py, preprocess.py, predictor.py, distributed.py, optimizers.py, tokenization.py, rouge_utils.py, uncertainty_loss.py, rouge_score.py\ntags:  [rouge]\n\nrepository Georgetown-IR-Lab/Rouge"
  },
  {
    "repo": "GiaLacTRAN/convolutional_deep_gp_random_features",
    "predicted_tasks": ":  [Deep Gaussian Processes, Random Features]\n\nrepository jasonyang19",
    "repo_with_tasks": " GiaLacTRAN/convolutional_deep_gp_random_features\ncontains files: main.py, dgp_rf.py, dgp_sorf.py, dgp_sorf_optim.py, dgp_sorf_optim_mcd.py, alexnet_feature_extractor.py, cnn_dgp.py, sorf_transform_old.py, exp.py, pre_process_data.py\ntags:  [Deep Gaussian Processes, Random Features]\n\n",
    "generated_text": "repository Archer-Tatsu/V-CNN\ncontains files test.py, VQ_net.py, yuv.py, VP_net.py, sphere.py, dataset_VQA_ODV.py, proposal.py, main, VQA_ODV_Transform, DownSample\nits tags are ['visual question answering','saliency prediction', 'video quality assessment', 'vqa']\n\n\nrepository Cyril-Sterling/EVFlowNet-pytorch\ncontains files eval_utils.py, basic_layers.py, EVFlowNet.py, train.py, losses.py, test.py, vis_utils.py, data_loader.py, config.py, extract_rosbag_to_npy.py\nits tags are ['optical flow estimation', 'frame']\n\nrepository GiaLacTRAN/convolutional_deep_gp_random_features\ncontains files: main.py, dgp_rf.py, dgp_sorf.py, dgp_sorf_optim.py, dgp_sorf_optim_mcd.py, alexnet_feature_extractor.py, cnn_dgp.py, sorf_transform_old.py, exp.py, pre_process_data.py\ntags:  [Deep Gaussian Processes, Random Features]\n\nrepository jasonyang19"
  },
  {
    "repo": "GilgameshD/ICRA2020-CMTS",
    "predicted_tasks": ": 3D reconstruction, multi-view stereo, image matching\n\nrepository Gilgames",
    "repo_with_tasks": " GilgameshD/ICRA2020-CMTS\ncontains files: main.py, model.py, show_interpolation.py, dataloader.py, trainer.py, utils.py, show_reconstrcution.py, Sequence_Dataset, DPGMM_Dataset, AdaIN\ntags: 3D reconstruction, multi-view stereo, image matching\n\n",
    "generated_text": "repository ArealTeamM2AIC/Remote-Sensing-Image\ncontains files utils.py, score.py, make_bundle.py, data_manager.py, data_manager.py, model.py, ingestion.py, model.py, data_io.py, libscores.py\nits tags are ['classification','scene classification', 'general classification']\n\n\nrepository D-X-Y/landmark-detection\ncontains files options.py, logger.py, basic.py, file_utils.py, GEN_WFLW.py, file_utils.py, multiview_loss_regression.py, saver.py, modules.py, layer_utils.py\nits tags are ['facial landmark detection', 'optical flow estimation']\n\nrepository GilgameshD/ICRA2020-CMTS\ncontains files: main.py, model.py, show_interpolation.py, dataloader.py, trainer.py, utils.py, show_reconstrcution.py, Sequence_Dataset, DPGMM_Dataset, AdaIN\ntags: 3D reconstruction, multi-view stereo, image matching\n\nrepository Gilgames"
  },
  {
    "repo": "Git10Shikhar/Self-Driving-Cars",
    "predicted_tasks": ":  self driving cars, image processing, deep learning, cnn, tensorflow\n\n\nrepository Ksh",
    "repo_with_tasks": " Git10Shikhar/Self-Driving-Cars\ncontains files: Self_Driving_Cars.py, main, return_data, Load, CNN, op_image_processing, preprocess, prediction, resize, dump\ntags:  self driving cars, image processing, deep learning, cnn, tensorflow\n\n\n",
    "generated_text": "repository Arko98/A-Deep-Learning-Approach-for-Automatic-Detection-of-Fake-News\ncontains files Fake, News, Hierarchical, Attention, fine-tuned.py, Attention.py, Fake, News, ELMo, fine-tuned.py\nits tags are ['fake news detection', 'feature engineering']\n\n\nrepository DC1991/G2L_Net\ncontains files networks_usage.py, parse_config.py, utils_funs.py, torch_utils.py, data_loder_linemod.py, utils.py, test_linemod.py, train_G2L.py, models.py, networks_arch.py\nits tags are ['6d pose estimation', 'translation', 'pose estimation', '6d pose estimation using rgb']\n\nrepository Git10Shikhar/Self-Driving-Cars\ncontains files: Self_Driving_Cars.py, main, return_data, Load, CNN, op_image_processing, preprocess, prediction, resize, dump\ntags:  self driving cars, image processing, deep learning, cnn, tensorflow\n\n\nrepository Ksh"
  },
  {
    "repo": "Gitikameher/Domain-Adaptive-Single-View-3D-Reconstruction",
    "predicted_tasks": ": 3d reconstruction, domain adaptation, single view stereo\n\nrepository Github/t",
    "repo_with_tasks": " Gitikameher/Domain-Adaptive-Single-View-3D-Reconstruction\ncontains files: models.py, Decoder, Tnet, Destructor_domain, Destructor_shape, Encoder, _F_\ntags: 3d reconstruction, domain adaptation, single view stereo\n\n",
    "generated_text": "repository Arquestro/ugan-pytorch\ncontains files pix2pix.py, pipelines.py, inference.py, loss_modules.py, datasets.py, train.py, UganTrainPipeline, UganDatasetInferencePipeline, decoder_block, DiscriminatorNet\nits tags are ['decision making', 'image restoration', 'underwater image restoration']\n\n\nrepository DFKI-NLP/OLM\ncontains files lm_sampling.py, delete.py, config_test.py, instances.py, unk_replace.py, instance_test.py, strategy.py, explainer_allennlp.py, gradient.py, config.py\nits tags are ['language modelling', 'general classification']\n\nrepository Gitikameher/Domain-Adaptive-Single-View-3D-Reconstruction\ncontains files: models.py, Decoder, Tnet, Destructor_domain, Destructor_shape, Encoder, _F_\ntags: 3d reconstruction, domain adaptation, single view stereo\n\nrepository Github/t"
  },
  {
    "repo": "Glaceon31/Document-Transformer",
    "predicted_tasks": ":  [document-transformer]\n\nrepository gt0/imagenet\ncontains files:",
    "repo_with_tasks": " Glaceon31/Document-Transformer\ncontains files: transformer.py, build_vocab.py, combine.py, trainer_ctx.py, optimize.py, convert_vocab.py, contextual_transformer.py, sample.py, dataset.py, translator.py\ntags:  [document-transformer]\n\n",
    "generated_text": "repository Arthur151/CenterHMR\ncontains files crowdhuman.py, basic_modules.py, web_vis.py, vis_utils_py36_o3d9.py, hrnet_32.py, tracker.py, up.py, prior_loss.py, cocoeval.py, center_utils.py\nits tags are ['3d depth estimation']\n\n\nrepository DInesh1234-wq/tyredataset\ncontains files main.py, test.py, darknet_video.py, detect.py, convert.py, process.py, models.py, darknet.py, train.py, convert\nits tags are ['long tail learning', 'object detection', 'dense object detection','region proposal','real time object detection', 'general classification', 'pedestrian detection']\n\nrepository Glaceon31/Document-Transformer\ncontains files: transformer.py, build_vocab.py, combine.py, trainer_ctx.py, optimize.py, convert_vocab.py, contextual_transformer.py, sample.py, dataset.py, translator.py\ntags:  [document-transformer]\n\nrepository gt0/imagenet\ncontains files:"
  },
  {
    "repo": "GodPater/model_fcn",
    "predicted_tasks": ": 1d convolutional neural networks, semantic segmentation, deep learning\n\nrepository kennyw",
    "repo_with_tasks": " GodPater/model_fcn\ncontains files: train_8x.py, vgg.py, train.py, convert_fcn_dataset.py, utils.py, dataset.py, main, dict_to_tf_example, image2label, read_images_names\ntags: 1d convolutional neural networks, semantic segmentation, deep learning\n\n",
    "generated_text": "repository ArushiSinghal/Neural-Machine-Translation\ncontains files indic_normalize.py, acronym_transliterator.py, itrans_transliterator.py, loader.py, sinhala_transliterator.py, english_to_hindi_keras.py, unsupervised_morph.py, indic_scripts.py, syllabifier.py, english_script.py\nits tags are ['traffic prediction','machine translation', 'time series forecasting']\n\n\nrepository DLTK/models\ncontains files reader.py, neuronet.py, train.py, fetal_fcn.py, reader.py, demo.py, network.py, preprocessing.py, train.py, reader.py\nits tags are ['brain image segmentation', 'brain segmentation','semantic segmentation']\n\nrepository GodPater/model_fcn\ncontains files: train_8x.py, vgg.py, train.py, convert_fcn_dataset.py, utils.py, dataset.py, main, dict_to_tf_example, image2label, read_images_names\ntags: 1d convolutional neural networks, semantic segmentation, deep learning\n\nrepository kennyw"
  },
  {
    "repo": "Goodideax/lstm-negtive",
    "predicted_tasks": ": 1d convolutional neural network, lstm, negative sampling\n\nrepository Kaggle/deep",
    "repo_with_tasks": " Goodideax/lstm-negtive\ncontains files: ensemble.py, main.py, model.py, data_init, minibatch, main, train, setdevice, ensemble_nll_loss, ensemble_perplexity\ntags: 1d convolutional neural network, lstm, negative sampling\n\n",
    "generated_text": "repository Ashafix/NeuroMario\ncontains files ServerHTTP.py, NeuroMario.py, Emuhawk.py, test_NeuroMario.py, Printer.py, TimeFromImage.py, test_ServerSocket.py, test_TimeFromImage.py, Learn.py, dummy.py\nits tags are ['self driving cars', 'lane detection']\n\n\nrepository DPautoGAN/DPautoGAN\ncontains files dp_wgan.py, wgan.py, gan.py, analysis.py, dp_optimizer.py, dp_autoencoder.py, rdp_accountant.py, evaluation.py, dp_autoencoder.py, sampling.py\nits tags are ['synthetic data generation']\n\nrepository Goodideax/lstm-negtive\ncontains files: ensemble.py, main.py, model.py, data_init, minibatch, main, train, setdevice, ensemble_nll_loss, ensemble_perplexity\ntags: 1d convolutional neural network, lstm, negative sampling\n\nrepository Kaggle/deep"
  },
  {
    "repo": "Gouet/DDPG_PendulumV1",
    "predicted_tasks": ":  reinforcement learning, deep dqn, pendulum v1\n\n\nrepository",
    "repo_with_tasks": " Gouet/DDPG_PendulumV1\ncontains files: ddpg.py, train.py, ReplayBuffer, TargetCritic, OrnsteinUhlenbeckActionNoise, TargetActor, Actor, Critic, train, create_tensorboard\ntags:  reinforcement learning, deep dqn, pendulum v1\n\n\n",
    "generated_text": "repository AssafSinger94/sigmorphon-2020-inflection\ncontains files train.py, dataloader.py, multitask-augment.py, model.py, transformer.py, task0-build-dataset.py, decoding.py, handle_checkpoints.py, downsample.py, hallucinate.py\nits tags are ['morphological inflection','machine translation', 'text summarization', 'hard attention', 'abstractive text summarization', 'translation', 'constituency parsing', 'cross lingual transfer','multimodal machine translation']\n\n\nrepository DSPsleeporg/smiles-transformer\ncontains files test_randomizer.py, pretrain_rnn.py, dataset.py, pretrain_trfm.py, build_vocab.py, build_corpus.py, enumerator.py, utils.py, sample.py, test_vocab.py\nits tags are ['language modelling', 'drug discovery', 'unsupervised pre training','small data image classification']\n\nrepository Gouet/DDPG_PendulumV1\ncontains files: ddpg.py, train.py, ReplayBuffer, TargetCritic, OrnsteinUhlenbeckActionNoise, TargetActor, Actor, Critic, train, create_tensorboard\ntags:  reinforcement learning, deep dqn, pendulum v1\n\n\nrepository"
  },
  {
    "repo": "GraphEmbedding/HRLHG",
    "predicted_tasks": ":  ['graph embedding', 'node2vec', 'rank cosine similarity']",
    "repo_with_tasks": " GraphEmbedding/HRLHG\ncontains files: main.py, rank_cos.py, node2vec.py, read, learn_embeddings, main, parse_args, main, parse_args, read\ntags:  ['graph embedding', 'node2vec', 'rank cosine similarity']",
    "generated_text": "repository Atharva-Phatak/GAN_MNIST\ncontains files GAN_mnist.py\nits tags are ['image clustering','representation learning', 'conditional image generation']\n\n\nrepository DaVran369/face\ncontains files projector.py, local.py, metric_base.py, run_projector.py, perceptual_path_length.py, optimizer.py, training_loop.py, tfutil.py, frechet_inception_distance.py, network.py\nits tags are ['image generation']\n\nrepository GraphEmbedding/HRLHG\ncontains files: main.py, rank_cos.py, node2vec.py, read, learn_embeddings, main, parse_args, main, parse_args, read\ntags:  ['graph embedding', 'node2vec', 'rank cosine similarity']"
  },
  {
    "repo": "GreatTommy/yolov3",
    "predicted_tasks": ":  [object detection]\n\n\nrepository KyleMcGuffin/PyTorch-Transform",
    "repo_with_tasks": " GreatTommy/yolov3\ncontains files: layers.py, test.py, detect.py, adabound.py, datasets.py, models.py, torch_utils.py, utils.py, train.py, google_utils.py\ntags:  [object detection]\n\n\n",
    "generated_text": "repository AtmaHou/MetaDialog\ncontains files scale_controller.py, config.py, data_statistic.py, data_generator.py, preprocessor.py, raw_data_loader.py, transition_scorer.py, device_helper.py, seq_labeler.py, generate_meta_dataset.py\nits tags are ['few shot learning', 'cross lingual natural language inference', 'conversational response selection', 'natural language understanding', 'text classification','sentence classification', 'named entity recognition', 'linear probe classification', 'question answering', 'type prediction', 'general classification','sentiment analysis', 'common sense reasoning', 'natural language inference']\n\n\nrepository DakshIdnani/pytorch-nice\ncontains files nice.py, config.py, modules.py, train.py, CouplingLayer, ScalingLayer, LogisticDistribution, NICE\nits tags are ['image generation']\n\nrepository GreatTommy/yolov3\ncontains files: layers.py, test.py, detect.py, adabound.py, datasets.py, models.py, torch_utils.py, utils.py, train.py, google_utils.py\ntags:  [object detection]\n\n\nrepository KyleMcGuffin/PyTorch-Transform"
  },
  {
    "repo": "Gstaerman/ACHD",
    "predicted_tasks": ": 1d convolutional neural network, ACHD, CNN, Convolutional Neural Networks",
    "repo_with_tasks": " Gstaerman/ACHD\ncontains files: old_ACHD.py, setup.py, FuncCHD, read\ntags: 1d convolutional neural network, ACHD, CNN, Convolutional Neural Networks",
    "generated_text": "repository Au3C2/Generator-Versus-Segmentor\ncontains files ms_ssim.py, main.py, test.py, unet_parts.py, nii2npy_brats.py, split_cases_lits.py, dataset.py, unet_model.py, split_cases_brats.py, nii2npy_lits.py\nits tags are ['medical image segmentation','style transfer', 'anomaly detection', 'image enhancement','semantic segmentation']\n\n\nrepository DancingSoul/NQ_BERT-DM\ncontains files graph_encoder.py, case_study.py, nq_eval_tools.py, model.py, nq_eval_utils.py, create_examples.py, dataset.py, run.py, OutputLayer, GraphAttention\nits tags are ['machine reading comprehension', 'graph attention','reading comprehension']\n\nrepository Gstaerman/ACHD\ncontains files: old_ACHD.py, setup.py, FuncCHD, read\ntags: 1d convolutional neural network, ACHD, CNN, Convolutional Neural Networks"
  },
  {
    "repo": "GuangpingYuan/PNN_Pong_A3C",
    "predicted_tasks": ":  [pong]\n\nrepository JianxiongXiao/Deep_Rein",
    "repo_with_tasks": " GuangpingYuan/PNN_Pong_A3C\ncontains files: test.py, PNN.py, Pong_PNN.py, param_collection.py, show.py, transfer_matrix.py, Pong_Env.py, prog_nn.py, ParamCollection, normalized_columns_initializer\ntags:  [pong]\n\n",
    "generated_text": "repository Aurelien-Pelissier/Raman-Imaging-Processing\ncontains files Cell_segment.py, Process_all.py, _Main, -, Raman_analysis.py, libRaman.py, Irradiance_Profile_Correction, gaussfit, baseline_recursive_polynomial_chebyshev, Identify_Background\nits tags are ['dimensionality reduction', 'feature selection']\n\n\nrepository DanielLongo/AdversarialTrain\ncontains files inception_score_mnist.py, trans_DCGAN.py, inception_score.py, mnist_classifier.py, utils.py, cDCGAN.py, DCGAN.py, generator_loss, generate_nosie, discriminator_loss\nits tags are ['image clustering','representation learning', 'adversarial text', 'conditional image generation', 'text to image generation', 'image generation','super resolution']\n\nrepository GuangpingYuan/PNN_Pong_A3C\ncontains files: test.py, PNN.py, Pong_PNN.py, param_collection.py, show.py, transfer_matrix.py, Pong_Env.py, prog_nn.py, ParamCollection, normalized_columns_initializer\ntags:  [pong]\n\nrepository JianxiongXiao/Deep_Rein"
  },
  {
    "repo": "Guillaume-Cr/lunar_lander_per",
    "predicted_tasks": ":",
    "repo_with_tasks": " Guillaume-Cr/lunar_lander_per\ncontains files: launch_agent.py, model.py, train_agent.py, agent.py, replay_buffer.py, Agent, QNetwork, ReplayBuffer, dqn, deque\ntags:",
    "generated_text": "repository AutoVision-cloud/DeformablePVRCNN\ncontains files def_voxel_set_abstraction.py, pointnet2_modules.py, bilinear_interpolate_torch, Self_Attention, DefVoxelSetAbstraction, StackSAModuleMSGAdapt, StackSAModuleMSGGated, StackSAModuleMSG, type_as, long\nits tags are ['object detection', '3d object detection']\n\n\nrepository DanielaStep/sentence_similarity_rouge\ncontains files Rouge155.py, summary_sentence_alignment.py, calculateRouge.py, rouge_sentence_similarity.py, utils.py, annotation_util.py, getComparisonOptions, main, initDataStructure, storeData\nits tags are ['sentence fusion','multi document summarization', 'document summarization', 'abstractive text summarization']\n\nrepository Guillaume-Cr/lunar_lander_per\ncontains files: launch_agent.py, model.py, train_agent.py, agent.py, replay_buffer.py, Agent, QNetwork, ReplayBuffer, dqn, deque\ntags:"
  },
  {
    "repo": "Guillemdb/FractalAI",
    "predicted_tasks": ":  [fractals, fractal, artificial intelligence]\n\n\nrepository jeremyj",
    "repo_with_tasks": " Guillemdb/FractalAI\ncontains files: state.py, dataset_creator.py, monitor.py, dm_control.py, model.py, dnn_train.py, swarm.py, environment.py, mlswarm.py, baselines.py\ntags:  [fractals, fractal, artificial intelligence]\n\n\n",
    "generated_text": "repository AutumnWu/Streamlined-Off-Policy-Learning\ncontains files plot.py, core_per.py, version.py, core.py, common.py, SOP.py, run.py, SOP_core_auto.py, run_utils.py, bench_ppo_cartpole.py\nits tags are ['continuous control', 'decision making', 'q learning','reinforcement learning']\n\n\nrepository Danil328/RetinaFace\ncontains files module.py, face_detector.py, rcnn.py, ds_utils.py, cascade_refine.py, symbol_common.py, cocoeval.py, callback.py, train.py, logger.py\nits tags are ['multi task learning', 'face detection', 'face verification']\n\nrepository Guillemdb/FractalAI\ncontains files: state.py, dataset_creator.py, monitor.py, dm_control.py, model.py, dnn_train.py, swarm.py, environment.py, mlswarm.py, baselines.py\ntags:  [fractals, fractal, artificial intelligence]\n\n\nrepository jeremyj"
  },
  {
    "repo": "GuoShi28/CBDNet",
    "predicted_tasks": ": 3D reconstruction, image segmentation, semantic segmentation, depth map generation, stereo",
    "repo_with_tasks": " GuoShi28/CBDNet\ncontains files: ISP_implement_cython.py, masks.py, ISP_implement.py, Demosaicing_malvar2004.py, ISP, demosaicing_CFA_Bayer_Malvar2004, ISP, masks_CFA_Bayer, convolve, masks_CFA_Bayer\ntags: 3D reconstruction, image segmentation, semantic segmentation, depth map generation, stereo",
    "generated_text": "repository Avmb/dl4mt-lm\ncontains files build_dictionary.py, strip_sgml.py, length.py, char_tokenize.py, data_iterator.py, small_lm.py, shuffle.py, small_lm_dr.py, train_small_lm.py, lm.py\nits tags are ['language modelling', 'permuted mnist']\n\n\nrepository Darius-Liesis/HRNet-works\ncontains files mask.py, crowdpose_concat_train_val.py, cocoeval.py, CrowdPoseDataset.py, setup.py, cocoeval.py, mask.py, mask.py, vis.py, fp16util.py\nits tags are ['representation learning', 'pose estimation', 'pose prediction','multi person pose estimation', '2d human pose estimation']\n\nrepository GuoShi28/CBDNet\ncontains files: ISP_implement_cython.py, masks.py, ISP_implement.py, Demosaicing_malvar2004.py, ISP, demosaicing_CFA_Bayer_Malvar2004, ISP, masks_CFA_Bayer, convolve, masks_CFA_Bayer\ntags: 3D reconstruction, image segmentation, semantic segmentation, depth map generation, stereo"
  },
  {
    "repo": "GustikS/NeuraLogic",
    "predicted_tasks": ": 1d convolutional neural network, recurrent neural networks, deep learning, neural networks, convnet",
    "repo_with_tasks": " GustikS/NeuraLogic\ncontains files: lrnn.py, main.py, deserialization.py, unified_template.py, learner.py, loading_results.py, main, Deserializer, Weight, Neuron\ntags: 1d convolutional neural network, recurrent neural networks, deep learning, neural networks, convnet",
    "generated_text": "repository AyaLotfy/premvos-tmp\ncontains files corr.py, Interface.py, Loader.py, config.py, DAVIS_masktransfer.py, InteractiveImageForwarder.py, Log.py, EvalGrabcut.py, OfflineAdaptingForwarder.py, print_stats.py\nits tags are ['one shot visual object segmentation', 'frame', 'video object segmentation', 'video semantic segmentation','semi supervised video object segmentation','semantic segmentation']\n\n\nrepository DartML/SteinGAN\ncontains files hmc_single.py, rbm_adv.py, sampler_HAIS.py, inits.py, updates.py, steingan_celeba.py, steingan_lsun.py, config.py, load.py, rng.py\nits tags are ['conditional image generation']\n\nrepository GustikS/NeuraLogic\ncontains files: lrnn.py, main.py, deserialization.py, unified_template.py, learner.py, loading_results.py, main, Deserializer, Weight, Neuron\ntags: 1d convolutional neural network, recurrent neural networks, deep learning, neural networks, convnet"
  },
  {
    "repo": "HAN-ARK/GVSS-S.A.Drone",
    "predicted_tasks": ":  [drone]\n\nrepository HAN-ARK/GVSS-S.A.",
    "repo_with_tasks": " HAN-ARK/GVSS-S.A.Drone\ncontains files: SaveDataDrone.py, MeanShiftPlusHoughCircle.py, MultiThreadCVDrone.py, Color, Detection.py, delayfix.py, CircleDetection.py, followbloonwithdronecam.py, AverageColour.py, HSV.py\ntags:  [drone]\n\n",
    "generated_text": "repository B-C-WANG/ReinforcementLearningInAutoPilot\ncontains files tensorflowTest.py, Environments_waypointTarget.py, DataMonitor.py, ddpg_train_laneFollowInSmallTownAndCity_GAL_v1_good.py, ddpg_laneFollowWithTrafficLight_carlaAgent_IDWR_onlyIL_testPassed.py, ddpg_laneFollowInSmallTown_ID2R_explore.py, DDPG_Agent.py, ddpg_laneFollow_with_keyboard_IAJR_debugging.py, ModelHooks.py, a3c_train_waypoints_GAL_v1.py\nits tags are ['autonomous driving', 'car racing','reinforcement learning']\n\n\nrepository DataTerminatorX/Keyword-BERT\ncontains files modeling.py, tokenization.py, modeling_test.py, tokenization_test.py, run_squad.py, extract_features.py, optimization_test.py, convert_to_bert_keyword.py, create_pretraining_data.py, run_classifier.py\nits tags are ['text matching']\n\nrepository HAN-ARK/GVSS-S.A.Drone\ncontains files: SaveDataDrone.py, MeanShiftPlusHoughCircle.py, MultiThreadCVDrone.py, Color, Detection.py, delayfix.py, CircleDetection.py, followbloonwithdronecam.py, AverageColour.py, HSV.py\ntags:  [drone]\n\nrepository HAN-ARK/GVSS-S.A."
  },
  {
    "repo": "HCPLab-SYSU/PVCGN",
    "predicted_tasks": ":  [\"pose estimation\", \"human pose estimation\"]",
    "repo_with_tasks": " HCPLab-SYSU/PVCGN\ncontains files: utils.py, multigraph.py, ggnn_evaluation_sh_top72_peak.py, ggnn_evaluation.py, ggnn_evaluation_hz_top20_peak.py, ggnn_train.py, rgcn.py, ggnn_utils.py, metrics.py, read_cfg_file\ntags:  [\"pose estimation\", \"human pose estimation\"]",
    "generated_text": "repository BBVA/UMAL\ncontains files umal.py, ald_log_pdf, log_sum_exp, minmax, elu_modif, np_log_sum_exp, calculate_distribution, umal_log_pdf, build_UMAL, sum\nits tags are ['decision making']\n\n\nrepository DavHoffmann/LearningToTrainWithSyntheticHumans\ncontains files train_withoutTeacher.py, pafprocess_mpi.py, network_base.py, train_with_adversarial_teacher.py, pose_dataset_personLevel_minDist.py, exportGrpah_final.py, training_util.py, common.py, vgg_teacher.py, eval_MPI.py\nits tags are ['pose estimation','multi person pose estimation', 'object detection', 'keypoint detection', '2d human pose estimation']\n\nrepository HCPLab-SYSU/PVCGN\ncontains files: utils.py, multigraph.py, ggnn_evaluation_sh_top72_peak.py, ggnn_evaluation.py, ggnn_evaluation_hz_top20_peak.py, ggnn_train.py, rgcn.py, ggnn_utils.py, metrics.py, read_cfg_file\ntags:  [\"pose estimation\", \"human pose estimation\"]"
  },
  {
    "repo": "HHansi/Semeval-2020-Task3",
    "predicted_tasks": ":  [semeval2020]\n\nrepository johannes-hermann/P",
    "repo_with_tasks": " HHansi/Semeval-2020-Task3\ncontains files: data_preprocessor.py, evaluation1.py, embedding.py, file_util.py, ne_processor.py, embedding_util.py, evaluation2.py, average_embedding.py, baseline_embedding.py, similarity_measures.py\ntags:  [semeval2020]\n\n",
    "generated_text": "repository BCV-Uniandes/SIMBA\ncontains files test.py, simba.py, data_loader.py, train.py, test, main, evaluate, train, main, BoneageDataset\nits tags are ['pose estimation', 'hand pose estimation']\n\n\nrepository DavidLee-4032/Graph_Opt\ncontains files main.py, config.py, runner.py, models.py, agent.py, environment.py, graph.py, DQAgent, Environment, Graph\nits tags are ['combinatorial optimization', 'graph embedding']\n\nrepository HHansi/Semeval-2020-Task3\ncontains files: data_preprocessor.py, evaluation1.py, embedding.py, file_util.py, ne_processor.py, embedding_util.py, evaluation2.py, average_embedding.py, baseline_embedding.py, similarity_measures.py\ntags:  [semeval2020]\n\nrepository johannes-hermann/P"
  },
  {
    "repo": "HIT-SCIR/ltp",
    "predicted_tasks": ":  [nlp]\n\nrepository johannesbauer/deep-learning-for-d",
    "repo_with_tasks": " HIT-SCIR/ltp\ncontains files: task_semantic_dependency_parsing.py, task_semantic_role_labeling.py, multitask_distill.py, conf.py, frontend.py, transformer_biaffine_crf.py, bilinear.py, task_named_entity_recognition.py, convertor.py, batched_dataset.py\ntags:  [nlp]\n\n",
    "generated_text": "repository BIDData/BIDMach\ncontains files cluster_mux.py, make_bayesnet_data.py, bidmach_ec2.py, preprocess_mnt2014_pc6.py, runICA.py, basic.py, skkmeans.py, preprocess_mnt2014.py, sklogistic.py, collect_files.py\nits tags are ['bayesian inference']\n\n\nrepository DdeGeus/single-network-panoptic-segmentation\ncontains files instance_segmentation.py, summaries.py, mask_utils.py, train.py, panoptic_ops.py, feature_extractor.py, input_pipeline_cityscapes_panoptic_new_test.py, sampler.py, prepare_cityscapes_panoptic.py, predict.py\nits tags are ['scene understanding','scene parsing', 'panoptic segmentation', 'instance segmentation','scene segmentation','semantic segmentation']\n\nrepository HIT-SCIR/ltp\ncontains files: task_semantic_dependency_parsing.py, task_semantic_role_labeling.py, multitask_distill.py, conf.py, frontend.py, transformer_biaffine_crf.py, bilinear.py, task_named_entity_recognition.py, convertor.py, batched_dataset.py\ntags:  [nlp]\n\nrepository johannesbauer/deep-learning-for-d"
  },
  {
    "repo": "HKUST-KnowComp/AttackTransferLearning",
    "predicted_tasks": ": 1. Attack Transfer Learning; 2. BlackBox Attacks; 3. WhiteBox",
    "repo_with_tasks": " HKUST-KnowComp/AttackTransferLearning\ncontains files: train.py, blackbox_attack_by_transfer.py, whitebox_attack.py, data_list.py, attack_func.py, utils.py, network.py, prep_data.py, FGSM, fgsm_attack\ntags: 1. Attack Transfer Learning; 2. BlackBox Attacks; 3. WhiteBox",
    "generated_text": "repository BIYTC/mobilenet_maskrcnn\ncontains files inference.py, detectors.py, _utils.py, voc.py, poolers.py, registry.py, test_detectors.py, xmltococo.py, keypoint.py, inference.py\nits tags are ['lesion detection', 'computed tomography (ct)','medical object detection', 'tag', 'object detection', 'pedestrian detection','semantic segmentation']\n\n\nrepository DeadAt0m/ActiveSparseShifts-PyTorch\ncontains files torch_patch.py, shifts_test.py, setup.py, functional.py, extension.py, functional.py, shifts.py, shifts.py, setup_utils.py, get_extensions\nits tags are ['image classification', 'face verification','style transfer', 'quantization', 'general classification']\n\nrepository HKUST-KnowComp/AttackTransferLearning\ncontains files: train.py, blackbox_attack_by_transfer.py, whitebox_attack.py, data_list.py, attack_func.py, utils.py, network.py, prep_data.py, FGSM, fgsm_attack\ntags: 1. Attack Transfer Learning; 2. BlackBox Attacks; 3. WhiteBox"
  },
  {
    "repo": "HKUST-KnowComp/MLMA_hate_speech",
    "predicted_tasks": ":  hate speech detection, sentiment analysis\n\nrepository HKUST-KnowComp/MLMA_",
    "repo_with_tasks": " HKUST-KnowComp/MLMA_hate_speech\ncontains files: sluice_net.py, predictors.py, annotated_data_processing.py, run_sluice_net.py, baseline_classifiers.py, constants.py, utils.py, clean_text, lr_non_multilabel_classification, run_majority_voting\ntags:  hate speech detection, sentiment analysis\n\n",
    "generated_text": "repository BOBrown/deeparsing-master\ncontains files download_model_binary.py, detector.py, generate_sample_data.py, test_solver.py, jpg_2_png.py, test_io.py, extract_seconds.py, gen_lists_from_folder.py, test_net_spec.py, gen_val_id.py\nits tags are ['thermal image segmentation','real time semantic segmentation', 'image classification','scene parsing', 'lesion segmentation', 'video semantic segmentation','semantic segmentation']\n\n\nrepository DecentMakeover/detection\ncontains files faster_rcnn_x101_32x4d_fpn_1x.py, retinanet_ghm_r50_fpn_1x.py, decorators.py, hrfpn.py, retinanet_x101_64x4d_fpn_1x.py, bbox_target.py, build_loader.py, grid_head.py, rpn_r101_fpn_1x.py, libra_faster_rcnn_r50_fpn_1x.py\nits tags are ['object detection', 'instance segmentation','semantic segmentation']\n\nrepository HKUST-KnowComp/MLMA_hate_speech\ncontains files: sluice_net.py, predictors.py, annotated_data_processing.py, run_sluice_net.py, baseline_classifiers.py, constants.py, utils.py, clean_text, lr_non_multilabel_classification, run_majority_voting\ntags:  hate speech detection, sentiment analysis\n\nrepository HKUST-KnowComp/MLMA_"
  },
  {
    "repo": "HKUST-KnowComp/RINANTE",
    "predicted_tasks": ":  ['opinion mining', 'aspect mining','sentiment analysis']",
    "repo_with_tasks": " HKUST-KnowComp/RINANTE\ncontains files: modelutils.py, aspectrulemine.py, opinionrulemine.py, datautils.py, config.py, trainrinante.py, rulemine.py, runrulemine.py, rinante.py, ruleutils.py\ntags:  ['opinion mining', 'aspect mining','sentiment analysis']",
    "generated_text": "repository BUTIYO/vid2vid-test\ncontains files image_folder.py, resample2d.py, download_models_g1.py, convert.py, data_loader.py, models.py, submodules.py, base_dataset.py, FlowNetSD.py, download_datasets.py\nits tags are ['video to video synthesis', 'video prediction','semantic segmentation']\n\n\nrepository DeepGraphLearning/GMNN\ncontains files train.py, run_citeseer.py, loader.py, gnn.py, layer.py, layer.py, loader.py, run_cora.py, run_pubmed.py, trainer.py\nits tags are ['document classification', 'entity extraction using gan','representation learning','relational reasoning', 'text classification', 'node classification', 'classification', 'general classification']\n\nrepository HKUST-KnowComp/RINANTE\ncontains files: modelutils.py, aspectrulemine.py, opinionrulemine.py, datautils.py, config.py, trainrinante.py, rulemine.py, runrulemine.py, rinante.py, ruleutils.py\ntags:  ['opinion mining', 'aspect mining','sentiment analysis']"
  },
  {
    "repo": "HLR/LatentAlignmentProcedural",
    "predicted_tasks": ":  [nlp]\n\nrepository johannesbauer/BayesianOptimization",
    "repo_with_tasks": " HLR/LatentAlignmentProcedural\ncontains files: main.py, bertModel-checkpoint.py, util-checkpoint.py, models.py, bertModel.py, main-checkpoint.py, single_transformer-checkpoint.py, single_transformer.py, models-checkpoint.py, util.py\ntags:  [nlp]\n\n",
    "generated_text": "repository BYOGan/BYOGan\ncontains files VGenerator.py, optimizer.py, ModelsInit.py, WDiscriminator.py, WGenerator.py, LatentVector.py, TrainGAN.py, DCDiscriminator.py, loss.py, app.py\nits tags are ['time series few shot learning with heterogeneous channels','super resolution']\n\n\nrepository DeepLearnXMU/ABD-NMT\ncontains files nn.py, normalize.py, scan.py, optimizer.py, rnnsearch.py, delaytask.py, conv_vocab..py, runeval.py, parallel.py, bleu.py\nits tags are ['translation','machine translation']\n\nrepository HLR/LatentAlignmentProcedural\ncontains files: main.py, bertModel-checkpoint.py, util-checkpoint.py, models.py, bertModel.py, main-checkpoint.py, single_transformer-checkpoint.py, single_transformer.py, models-checkpoint.py, util.py\ntags:  [nlp]\n\nrepository johannesbauer/BayesianOptimization"
  }
]
