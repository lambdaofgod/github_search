#+title: Results

#+BEGIN_SRC python :session results.org  :exports both
from json_utils import normalize_df
import pandas as pd

results_df = pd.read_json("/tmp/predictions.json", orient="records", lines=True)
normalize_df(results_df, "predicted_repo_record")
#+END_SRC

#+RESULTS:
#+begin_example
                                     repo  ...                                     generated_text
0                DeepMindv2/DeepDetection  ...  \n['detection', 'detection evaluation', 'CNN',...
1                       DeepSceneSeg/SSMA  ...  \n['object detection', 'SSMA Network', 'mask',...
2         Deepest-Project/WorldModels-A3C  ...  \n['3D RNNs', 'deep learning', 'deep reinforce...
3                 DelTA-Lab-IITK/CCM-WACV  ...  \n['deep learning', 'generative models']\n\n##...
4                     DengPingFan/BBS-Net  ...  \n['deep learning', 'image classification', 'm...
..                                    ...  ...                                                ...
95                           HIT-SCIR/ltp  ...  \n['scene understanding', 'semantic understand...
96  HKUST-KnowComp/AttackTransferLearning  ...  \n['transfer learning', 'defense']\n\n## repos...
97        HKUST-KnowComp/MLMA_hate_speech  ...  \n['sentiment', 'detection', 'text', 'hate spe...
98                 HKUST-KnowComp/RINANTE  ...  \n['semantic segmentation', 'object detection'...
99          HLR/LatentAlignmentProcedural  ...  \n['transformer', 'bert', 'unsupervised', 'par...

[100 rows x 6 columns]
#+end_example
